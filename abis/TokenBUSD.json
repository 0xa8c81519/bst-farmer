{
  "contractName": "TokenBUSD",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCoins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCoins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IBEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IBEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IBEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IBEP20-balanceOf} and {IBEP20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IBEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IBEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IBEP20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/test/TokenBUSD.sol\":\"TokenBUSD\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BEP20.sol\":{\"keccak256\":\"0x01f6438fc1ff254dadd94a862179b723ee0d66b56498a7e7c7223f211f8d3d4a\",\"urls\":[\"bzz-raw://944a8ac556d966211ae31587fbdb416a28e64c9379c008d3733cad525cbf9f89\",\"dweb:/ipfs/QmNhLB3g3a7Big11kwwzYz2MWBw97mUnGc89Y3hiznrgFY\"]},\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0x2748ac210641b71a66974d449996ce71dee0efca4f1c6f948ffa08fb959929cb\",\"urls\":[\"bzz-raw://d82927eef0fd44241466a52708b4979f65b5152b77879eda774d2839a8128680\",\"dweb:/ipfs/QmcCx6rCwiuf47V4SQjEqaTAvgCvaeirhb91yEcJMUJfhu\"]},\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/test/TokenBUSD.sol\":{\"keccak256\":\"0x5520498e7bf770620225c65b54a0e65ea5a220ed7e1923a13ccd490ac1eb9c81\",\"urls\":[\"bzz-raw://cd08322e07f24cec26f1b6614308dc745bcfba58689fda728995104b94156d21\",\"dweb:/ipfs/QmZG5LdhfQRtxUcv6uurnDZqUfST1frETBFH2q6piZrcef\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9486045e189facd2e868ece35249872598ef03f1087fb6fa4d1161842daa2287\",\"urls\":[\"bzz-raw://77c3a04ef8453788b14b1ebbc24dd3f0a18ceb2615cd156aac949a611e552af8\",\"dweb:/ipfs/QmcmqWGguRM3iLuF57tcyrN3F6EA63kzeNkDfQuteBnurr\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600d81526c109554d108199bdc881d195cdd609a1b602080830191825283518085019094526004845263109554d160e21b9084015281519192916200006391600391620003de565b50805162000079906004906020840190620003de565b50506005805460ff191660121790555060006200009e6001600160e01b036200011e16565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000906000805160206200129d833981519152908290a350620000f7336001600160e01b036200012316565b62000118336b033b2e3c9fd0803ce80000006001600160e01b036200024b16565b62000480565b335b90565b620001366001600160e01b036200011e16565b6001600160a01b0316620001526001600160e01b036200036316565b6001600160a01b031614620001ae576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620001f55760405162461bcd60e51b8152600401808060200182810382526026815260200180620012776026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416906000805160206200129d83398151915290600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6001600160a01b038216620002a7576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620002be600083836001600160e01b036200037716565b620002da816002546200037c60201b62000b281790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200030d91839062000b286200037c821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60055461010090046001600160a01b031690565b505050565b600082820183811015620003d7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200042157805160ff191683800117855562000451565b8280016001018555821562000451579182015b828111156200045157825182559160200191906001019062000434565b506200045f92915062000463565b5090565b6200012091905b808211156200045f57600081556001016200046a565b610de780620004906000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102b5578063a9059cbb146102e1578063dd62ed3e1461030d578063f2fde38b1461033b576100f5565b806370a082311461025b578063715018a6146102815780638da5cb5b1461028957806395d89b41146102ad576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce5671461020757806339509351146102255780635f5fd2e214610251576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b610102610361565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103f7565b604080519115158252519081900360200190f35b6101bf610414565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b0381358116916020810135909116906040013561041a565b61020f6104a7565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561023b57600080fd5b506001600160a01b0381351690602001356104b0565b610259610504565b005b6101bf6004803603602081101561027157600080fd5b50356001600160a01b0316610519565b610259610534565b6102916105f8565b604080516001600160a01b039092168252519081900360200190f35b61010261060c565b6101a3600480360360408110156102cb57600080fd5b506001600160a01b03813516906020013561066d565b6101a3600480360360408110156102f757600080fd5b506001600160a01b0381351690602001356106db565b6101bf6004803603604081101561032357600080fd5b506001600160a01b03813581169160200135166106ef565b6102596004803603602081101561035157600080fd5b50356001600160a01b031661071a565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b5050505050905090565b600061040b61040461083a565b848461083e565b50600192915050565b60025490565b600061042784848461092a565b61049d8461043361083a565b61049885604051806060016040528060288152602001610cfa602891396001600160a01b038a1660009081526001602052604081209061047161083a565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a9116565b61083e565b5060019392505050565b60055460ff1690565b600061040b6104bd61083a565b8461049885600160006104ce61083a565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b2816565b61051733683635c9adc5dea00000610b89565b565b6001600160a01b031660009081526020819052604090205490565b61053c61083a565b6001600160a01b031661054d6105f8565b6001600160a01b0316146105a8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b600061040b61067a61083a565b8461049885604051806060016040528060258152602001610d6b60259139600160006106a461083a565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a9116565b600061040b6106e861083a565b848461092a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61072261083a565b6001600160a01b03166107336105f8565b6001600160a01b03161461078e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166107d35760405162461bcd60e51b8152600401808060200182810382526026815260200180610cd46026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b0383166108835760405162461bcd60e51b8152600401808060200182810382526024815260200180610cb06024913960400191505060405180910390fd5b6001600160a01b0382166108c85760405162461bcd60e51b8152600401808060200182810382526022815260200180610d906022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661096f5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c8b6025913960400191505060405180910390fd5b6001600160a01b0382166109b45760405162461bcd60e51b8152600401808060200182810382526023815260200180610d486023913960400191505060405180910390fd5b6109bf838383610c85565b610a0281604051806060016040528060268152602001610d22602691396001600160a01b038616600090815260208190526040902054919063ffffffff610a9116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610a37908263ffffffff610b2816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ae5578181015183820152602001610acd565b50505050905090810190601f168015610b125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b82576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610be4576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610bf060008383610c85565b600254610c03908263ffffffff610b2816565b6002556001600160a01b038216600090815260208190526040902054610c2f908263ffffffff610b2816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220b3866d35100512ed6c6b3e5f32bbb4bc940689ccace32d12f7c8a1098c57827464736f6c634300060600334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102b5578063a9059cbb146102e1578063dd62ed3e1461030d578063f2fde38b1461033b576100f5565b806370a082311461025b578063715018a6146102815780638da5cb5b1461028957806395d89b41146102ad576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce5671461020757806339509351146102255780635f5fd2e214610251576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b610102610361565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103f7565b604080519115158252519081900360200190f35b6101bf610414565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b0381358116916020810135909116906040013561041a565b61020f6104a7565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561023b57600080fd5b506001600160a01b0381351690602001356104b0565b610259610504565b005b6101bf6004803603602081101561027157600080fd5b50356001600160a01b0316610519565b610259610534565b6102916105f8565b604080516001600160a01b039092168252519081900360200190f35b61010261060c565b6101a3600480360360408110156102cb57600080fd5b506001600160a01b03813516906020013561066d565b6101a3600480360360408110156102f757600080fd5b506001600160a01b0381351690602001356106db565b6101bf6004803603604081101561032357600080fd5b506001600160a01b03813581169160200135166106ef565b6102596004803603602081101561035157600080fd5b50356001600160a01b031661071a565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b5050505050905090565b600061040b61040461083a565b848461083e565b50600192915050565b60025490565b600061042784848461092a565b61049d8461043361083a565b61049885604051806060016040528060288152602001610cfa602891396001600160a01b038a1660009081526001602052604081209061047161083a565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a9116565b61083e565b5060019392505050565b60055460ff1690565b600061040b6104bd61083a565b8461049885600160006104ce61083a565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b2816565b61051733683635c9adc5dea00000610b89565b565b6001600160a01b031660009081526020819052604090205490565b61053c61083a565b6001600160a01b031661054d6105f8565b6001600160a01b0316146105a8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b600061040b61067a61083a565b8461049885604051806060016040528060258152602001610d6b60259139600160006106a461083a565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a9116565b600061040b6106e861083a565b848461092a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61072261083a565b6001600160a01b03166107336105f8565b6001600160a01b03161461078e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166107d35760405162461bcd60e51b8152600401808060200182810382526026815260200180610cd46026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b0383166108835760405162461bcd60e51b8152600401808060200182810382526024815260200180610cb06024913960400191505060405180910390fd5b6001600160a01b0382166108c85760405162461bcd60e51b8152600401808060200182810382526022815260200180610d906022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661096f5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c8b6025913960400191505060405180910390fd5b6001600160a01b0382166109b45760405162461bcd60e51b8152600401808060200182810382526023815260200180610d486023913960400191505060405180910390fd5b6109bf838383610c85565b610a0281604051806060016040528060268152602001610d22602691396001600160a01b038616600090815260208190526040902054919063ffffffff610a9116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610a37908263ffffffff610b2816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ae5578181015183820152602001610acd565b50505050905090810190601f168015610b125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b82576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610be4576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610bf060008383610c85565b600254610c03908263ffffffff610b2816565b6002556001600160a01b038216600090815260208190526040902054610c2f908263ffffffff610b2816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220b3866d35100512ed6c6b3e5f32bbb4bc940689ccace32d12f7c8a1098c57827464736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "150:342:14:-:0;;;226:164;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;2075:140:0;;;;;;;;;;;-1:-1:-1;;;2075:140:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2075:140:0;;;;2146:12;;2075:140;;;2146:12;;:5;;:12;:::i;:::-;-1:-1:-1;2168:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2194:9:0;:14;;-1:-1:-1;;2194:14:0;2206:2;2194:14;;;-1:-1:-1;2194:9:0;904:12:20;-1:-1:-1;;;;;904:10:20;:12;:::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:20;;-1:-1:-1;;;;;926:18:20;;;;;;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:20;-1:-1:-1;;;;;;;;;;;;;959:43:20;-1:-1:-1;;959:43:20;-1:-1:-1;288:29:14::1;306:10;-1:-1:-1::0;;;;;288:17:14::1;:29:::0;:::i:1;:::-;327:56;333:10;345:37;-1:-1:-1::0;;;;;327:5:14::1;:56:::0;:::i:1;:::-;150:342:::0;;598:104:23;685:10;598:104;;:::o;2011:240:20:-;1308:12;-1:-1:-1;;;;;1308:10:20;:12;:::i;:::-;-1:-1:-1;;;;;1297:23:20;:7;-1:-1:-1;;;;;1297:5:20;:7;:::i;:::-;-1:-1:-1;;;;;1297:23:20;;1289:68;;;;;-1:-1:-1;;;1289:68:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:20;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:20::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:20;;::::1;::::0;2200:6:::1;::::0;::::1;;::::0;-1:-1:-1;;;;;;;;;;;2179:38:20;;;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;2227:17:20;;::::1;;;-1:-1:-1::0;;;;;;2227:17:20;;::::1;::::0;;;::::1;::::0;;2011:240::o;8419:370:0:-;-1:-1:-1;;;;;8502:21:0;;8494:65;;;;;-1:-1:-1;;;8494:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:49;8599:1;8603:7;8612:6;-1:-1:-1;;;;;8570:20:0;:49;:::i;:::-;8645:24;8662:6;8645:12;;:16;;;;;;:24;;;;:::i;:::-;8630:12;:39;-1:-1:-1;;;;;8700:18:0;;:9;:18;;;;;;;;;;;;:30;;8723:6;;8700:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8679:18:0;;:9;:18;;;;;;;;;;;:51;;;;8745:37;;;;;;;8679:18;;:9;;8745:37;;;;;;;;;;8419:370;;:::o;1085:85:20:-;1157:6;;;;;-1:-1:-1;;;;;1157:6:20;;1085:85::o;11343:121:0:-;;;;:::o;2690:175:21:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:21:o;150:342:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;150:342:14;;;-1:-1:-1;150:342:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "150:342:14:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;150:342:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2280:90:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2280:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4423:202;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4423:202:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3350:98;;;:::i;:::-;;;;;;;;;;;;;;;;5085:439;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5085:439:0;;;;;;;;;;;;;;;;;:::i;3200:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5919:289;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5919:289:0;;;;;;;;:::i;396:94:14:-;;;:::i;:::-;;3506:117:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3506:117:0;-1:-1:-1;;;;;3506:117:0;;:::i;1717:145:20:-;;;:::i;1085:85::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:20;;;;;;;;;;;;;;2483:94:0;;;:::i;6695:386::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6695:386:0;;;;;;;;:::i;3826:208::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3826:208:0;;;;;;;;:::i;4092:193::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4092:193:0;;;;;;;;;;:::i;2011:240:20:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2011:240:20;-1:-1:-1;;;;;2011:240:20;;:::i;2280:90:0:-;2358:5;2351:12;;;;;;;;-1:-1:-1;;2351:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2326:13;;2351:12;;2358:5;;2351:12;;2358:5;2351:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:90;:::o;4423:202::-;4538:4;4558:39;4567:12;:10;:12::i;:::-;4581:7;4590:6;4558:8;:39::i;:::-;-1:-1:-1;4614:4:0;4423:202;;;;:::o;3350:98::-;3429:12;;3350:98;:::o;5085:439::-;5221:4;5237:36;5247:6;5255:9;5266:6;5237:9;:36::i;:::-;5283:213;5305:6;5325:12;:10;:12::i;:::-;5351:135;5406:6;5351:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5351:19:0;;;;;;:11;:19;;;;;;5371:12;:10;:12::i;:::-;-1:-1:-1;;;;;5351:33:0;;;;;;;;;;;;-1:-1:-1;5351:33:0;;;:135;;:37;:135;:::i;:::-;5283:8;:213::i;:::-;-1:-1:-1;5513:4:0;5085:439;;;;;:::o;3200:90::-;3274:9;;;;3200:90;:::o;5919:289::-;6031:4;6051:129;6073:12;:10;:12::i;:::-;6099:7;6120:50;6159:10;6120:11;:25;6132:12;:10;:12::i;:::-;-1:-1:-1;;;;;6120:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;6120:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;396:94:14:-;435:48;441:10;453:29;435:5;:48::i;:::-;396:94::o;3506:117:0:-;-1:-1:-1;;;;;3598:18:0;3572:7;3598:18;;;;;;;;;;;;3506:117::o;1717:145:20:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:20;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:20;;1289:68;;;;;-1:-1:-1;;;1289:68:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:6:::1;::::0;1786:40:::1;::::0;1823:1:::1;::::0;1807:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1807:6:20::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1836:6;:19:::0;;-1:-1:-1;;;;;;1836:19:20::1;::::0;;1717:145::o;1085:85::-;1157:6;;;;;-1:-1:-1;;;;;1157:6:20;;1085:85::o;2483:94:0:-;2563:7;2556:14;;;;;;;;-1:-1:-1;;2556:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2531:13;;2556:14;;2563:7;;2556:14;;2563:7;2556:14;;;;;;;;;;;;;;;;;;;;;;;;6695:386;6812:4;6832:221;6854:12;:10;:12::i;:::-;6880:7;6901:142;6957:15;6901:142;;;;;;;;;;;;;;;;;:11;:25;6913:12;:10;:12::i;:::-;-1:-1:-1;;;;;6901:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;6901:25:0;;;:34;;;;;;;;;;;:142;;:38;:142;:::i;3826:208::-;3944:4;3964:42;3974:12;:10;:12::i;:::-;3988:9;3999:6;3964:9;:42::i;4092:193::-;-1:-1:-1;;;;;4251:18:0;;;4221:7;4251:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4092:193::o;2011:240:20:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:20;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:20;;1289:68;;;;;-1:-1:-1;;;1289:68:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:20;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:20::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:20;;::::1;::::0;2200:6:::1;::::0;::::1;;::::0;2179:38:::1;::::0;;;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;2227:17:20;;::::1;;;-1:-1:-1::0;;;;;;2227:17:20;;::::1;::::0;;;::::1;::::0;;2011:240::o;598:104:23:-;685:10;598:104;:::o;9975:370:0:-;-1:-1:-1;;;;;10106:19:0;;10098:68;;;;-1:-1:-1;;;10098:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10184:21:0;;10176:68;;;;-1:-1:-1;;;10176:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10255:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10306:32;;;;;;;;;;;;;;;;;9975:370;;;:::o;7555:594::-;-1:-1:-1;;;;;7690:20:0;;7682:70;;;;-1:-1:-1;;;7682:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7770:23:0;;7762:71;;;;-1:-1:-1;;;7762:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7844:47;7865:6;7873:9;7884:6;7844:20;:47::i;:::-;7922:105;7957:6;7922:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7922:17:0;;:9;:17;;;;;;;;;;;;:105;;:21;:105;:::i;:::-;-1:-1:-1;;;;;7902:17:0;;;:9;:17;;;;;;;;;;;:125;;;;8060:20;;;;;;;:32;;8085:6;8060:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;8037:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;8107:35;;;;;;;8037:20;;8107:35;;;;;;;;;;;;;7555:594;;;:::o;5432:163:21:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5537:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:21;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:21:o;8419:370:0:-;-1:-1:-1;;;;;8502:21:0;;8494:65;;;;;-1:-1:-1;;;8494:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:49;8599:1;8603:7;8612:6;8570:20;:49::i;:::-;8645:12;;:24;;8662:6;8645:24;:16;:24;:::i;:::-;8630:12;:39;-1:-1:-1;;;;;8700:18:0;;:9;:18;;;;;;;;;;;:30;;8723:6;8700:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8679:18:0;;:9;:18;;;;;;;;;;;:51;;;;8745:37;;;;;;;8679:18;;:9;;8745:37;;;;;;;;;;8419:370;;:::o;11343:121::-;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../BEP20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// for test, we create stable coin for ourself.\ncontract TokenBUSD is BEP20, Ownable {\n    using SafeMath for uint256;\n\n    constructor() public BEP20(\"BUSD for test\", \"BUSD\") {\n        transferOwnership(msg.sender);\n        _mint(msg.sender, 1_000_000_000_000_000_000_000_000_000);\n    }\n\n    function claimCoins() public {\n        _mint(msg.sender, 1_000_000_000_000_000_000_000);\n    }\n}\n",
  "sourcePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/test/TokenBUSD.sol",
  "ast": {
    "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/test/TokenBUSD.sol",
    "exportedSymbols": {
      "TokenBUSD": [
        12685
      ]
    },
    "id": 12686,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12646,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BEP20.sol",
        "file": "../BEP20.sol",
        "id": 12647,
        "nodeType": "ImportDirective",
        "scope": 12686,
        "sourceUnit": 510,
        "src": "25:22:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 12648,
        "nodeType": "ImportDirective",
        "scope": 12686,
        "sourceUnit": 12963,
        "src": "48:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12649,
              "name": "BEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 509,
              "src": "172:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BEP20_$509",
                "typeString": "contract BEP20"
              }
            },
            "id": 12650,
            "nodeType": "InheritanceSpecifier",
            "src": "172:5:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12651,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12962,
              "src": "179:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$12962",
                "typeString": "contract Ownable"
              }
            },
            "id": 12652,
            "nodeType": "InheritanceSpecifier",
            "src": "179:7:14"
          }
        ],
        "contractDependencies": [
          509,
          5474,
          12962,
          13636
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12685,
        "linearizedBaseContracts": [
          12685,
          12962,
          509,
          5474,
          13636
        ],
        "name": "TokenBUSD",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12655,
            "libraryName": {
              "contractScope": null,
              "id": 12653,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13317,
              "src": "199:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$13317",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "193:27:14",
            "typeName": {
              "id": 12654,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "212:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 12673,
              "nodeType": "Block",
              "src": "278:112:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12663,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "306:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "306:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12662,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12961,
                      "src": "288:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "288:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12666,
                  "nodeType": "ExpressionStatement",
                  "src": "288:29:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12668,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "333:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "333:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "315f3030305f3030305f3030305f3030305f3030305f3030305f3030305f3030305f303030",
                        "id": 12670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "345:37:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        },
                        "value": "1_000_000_000_000_000_000_000_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000"
                        }
                      ],
                      "id": 12667,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "327:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "327:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12672,
                  "nodeType": "ExpressionStatement",
                  "src": "327:56:14"
                }
              ]
            },
            "documentation": null,
            "id": 12674,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4255534420666f722074657374",
                    "id": 12658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "253:15:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5a07b2a74d9e8362d7baf56bf462e3b32aa00c389ec2edc31daeb493ba28c07b",
                      "typeString": "literal_string \"BUSD for test\""
                    },
                    "value": "BUSD for test"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "42555344",
                    "id": 12659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "270:6:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_54c512ac779647672b8d02e2fe2dc10f79bbf19f719d887221696215fd24e9f1",
                      "typeString": "literal_string \"BUSD\""
                    },
                    "value": "BUSD"
                  }
                ],
                "id": 12660,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12657,
                  "name": "BEP20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 509,
                  "src": "247:5:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BEP20_$509_$",
                    "typeString": "type(contract BEP20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "247:30:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:14"
            },
            "returnParameters": {
              "id": 12661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:0:14"
            },
            "scope": 12685,
            "src": "226:164:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12683,
              "nodeType": "Block",
              "src": "425:65:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "441:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "441:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "315f3030305f3030305f3030305f3030305f3030305f3030305f303030",
                        "id": 12680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "453:29:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1_000_000_000_000_000_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 12677,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "435:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "435:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12682,
                  "nodeType": "ExpressionStatement",
                  "src": "435:48:14"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5f5fd2e2",
            "id": 12684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimCoins",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:14"
            },
            "returnParameters": {
              "id": 12676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:0:14"
            },
            "scope": 12685,
            "src": "396:94:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12686,
        "src": "150:342:14"
      }
    ],
    "src": "0:493:14"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/test/TokenBUSD.sol",
      "exportedSymbols": {
        "TokenBUSD": [
          12685
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 12646,
        "name": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "attributes": {
          "SourceUnit": 510,
          "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BEP20.sol",
          "file": "../BEP20.sol",
          "scope": 12686,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 12647,
        "name": "ImportDirective",
        "src": "25:22:14"
      },
      {
        "attributes": {
          "SourceUnit": 12963,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 12686,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 12648,
        "name": "ImportDirective",
        "src": "48:52:14"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            509,
            5474,
            12962,
            13636
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            12685,
            12962,
            509,
            5474,
            13636
          ],
          "name": "TokenBUSD",
          "scope": 12686
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "BEP20",
                  "referencedDeclaration": 509,
                  "type": "contract BEP20"
                },
                "id": 12649,
                "name": "UserDefinedTypeName",
                "src": "172:5:14"
              }
            ],
            "id": 12650,
            "name": "InheritanceSpecifier",
            "src": "172:5:14"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 12962,
                  "type": "contract Ownable"
                },
                "id": 12651,
                "name": "UserDefinedTypeName",
                "src": "179:7:14"
              }
            ],
            "id": 12652,
            "name": "InheritanceSpecifier",
            "src": "179:7:14"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 13317,
                  "type": "library SafeMath"
                },
                "id": 12653,
                "name": "UserDefinedTypeName",
                "src": "199:8:14"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 12654,
                "name": "ElementaryTypeName",
                "src": "212:7:14"
              }
            ],
            "id": 12655,
            "name": "UsingForDirective",
            "src": "193:27:14"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 12685,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12656,
                "name": "ParameterList",
                "src": "237:2:14"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12661,
                "name": "ParameterList",
                "src": "278:0:14"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 509,
                      "type": "type(contract BEP20)",
                      "value": "BEP20"
                    },
                    "id": 12657,
                    "name": "Identifier",
                    "src": "247:5:14"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4255534420666f722074657374",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"BUSD for test\"",
                      "value": "BUSD for test"
                    },
                    "id": 12658,
                    "name": "Literal",
                    "src": "253:15:14"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "42555344",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"BUSD\"",
                      "value": "BUSD"
                    },
                    "id": 12659,
                    "name": "Literal",
                    "src": "270:6:14"
                  }
                ],
                "id": 12660,
                "name": "ModifierInvocation",
                "src": "247:30:14"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12961,
                              "type": "function (address)",
                              "value": "transferOwnership"
                            },
                            "id": 12662,
                            "name": "Identifier",
                            "src": "288:17:14"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 12663,
                                "name": "Identifier",
                                "src": "306:3:14"
                              }
                            ],
                            "id": 12664,
                            "name": "MemberAccess",
                            "src": "306:10:14"
                          }
                        ],
                        "id": 12665,
                        "name": "FunctionCall",
                        "src": "288:29:14"
                      }
                    ],
                    "id": 12666,
                    "name": "ExpressionStatement",
                    "src": "288:29:14"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 385,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 12667,
                            "name": "Identifier",
                            "src": "327:5:14"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 12668,
                                "name": "Identifier",
                                "src": "333:3:14"
                              }
                            ],
                            "id": 12669,
                            "name": "MemberAccess",
                            "src": "333:10:14"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "315f3030305f3030305f3030305f3030305f3030305f3030305f3030305f3030305f303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1000000000000000000000000000",
                              "value": "1_000_000_000_000_000_000_000_000_000"
                            },
                            "id": 12670,
                            "name": "Literal",
                            "src": "345:37:14"
                          }
                        ],
                        "id": 12671,
                        "name": "FunctionCall",
                        "src": "327:56:14"
                      }
                    ],
                    "id": 12672,
                    "name": "ExpressionStatement",
                    "src": "327:56:14"
                  }
                ],
                "id": 12673,
                "name": "Block",
                "src": "278:112:14"
              }
            ],
            "id": 12674,
            "name": "FunctionDefinition",
            "src": "226:164:14"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "5f5fd2e2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "claimCoins",
              "overrides": null,
              "scope": 12685,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12675,
                "name": "ParameterList",
                "src": "415:2:14"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12676,
                "name": "ParameterList",
                "src": "425:0:14"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 385,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 12677,
                            "name": "Identifier",
                            "src": "435:5:14"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 12678,
                                "name": "Identifier",
                                "src": "441:3:14"
                              }
                            ],
                            "id": 12679,
                            "name": "MemberAccess",
                            "src": "441:10:14"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "315f3030305f3030305f3030305f3030305f3030305f3030305f303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1000000000000000000000",
                              "value": "1_000_000_000_000_000_000_000"
                            },
                            "id": 12680,
                            "name": "Literal",
                            "src": "453:29:14"
                          }
                        ],
                        "id": 12681,
                        "name": "FunctionCall",
                        "src": "435:48:14"
                      }
                    ],
                    "id": 12682,
                    "name": "ExpressionStatement",
                    "src": "435:48:14"
                  }
                ],
                "id": 12683,
                "name": "Block",
                "src": "425:65:14"
              }
            ],
            "id": 12684,
            "name": "FunctionDefinition",
            "src": "396:94:14"
          }
        ],
        "id": 12685,
        "name": "ContractDefinition",
        "src": "150:342:14"
      }
    ],
    "id": 12686,
    "name": "SourceUnit",
    "src": "0:493:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x72535884116bA322d158855A4458b197B991b36C",
      "transactionHash": "0x3aa10071400c639c4aa775ddb869f23bd9ce90afa2e7f3e1a6c5629cd10d8bfb"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-15T07:06:28.014Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IBEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IBEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IBEP20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IBEP20-balanceOf} and {IBEP20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IBEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IBEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IBEP20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}