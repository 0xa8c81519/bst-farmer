{
  "contractName": "BSTToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter_",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "investors",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TOKENS_PER_INVESTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"investors\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKENS_PER_INVESTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IBEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IBEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IBEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {BEP20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {BEP20-_burn} and {BEP20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IBEP20-balanceOf} and {IBEP20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IBEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IBEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IBEP20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BSTToken with Governance.\"},\"userdoc\":{\"methods\":{\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BSTToken.sol\":\"BSTToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BEP20.sol\":{\"keccak256\":\"0x01f6438fc1ff254dadd94a862179b723ee0d66b56498a7e7c7223f211f8d3d4a\",\"urls\":[\"bzz-raw://944a8ac556d966211ae31587fbdb416a28e64c9379c008d3733cad525cbf9f89\",\"dweb:/ipfs/QmNhLB3g3a7Big11kwwzYz2MWBw97mUnGc89Y3hiznrgFY\"]},\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BEP20Burnable.sol\":{\"keccak256\":\"0xc702f8880f83dd637479d80006d60b0b7a8d5c19cc480a979d3054eb4afcafc0\",\"urls\":[\"bzz-raw://cea56d872a113fd721ae63c659d103f690527ef4cc43edeb4008c515c0408baa\",\"dweb:/ipfs/QmV5dUHVk7nW9iBo1oXYsUDECGxMgNPjXfzpNqxshZkQ7j\"]},\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BSTToken.sol\":{\"keccak256\":\"0xedb7bca241ac9eff763d3903ca8ea0a4fdb8e32ccfa35155207634b40a88f44e\",\"urls\":[\"bzz-raw://42d06f39e79cbb6d6d36c0ea398a28878853131f9c60b52d3458bbea9250057b\",\"dweb:/ipfs/QmSjFRPbekvSpayV61dDuqhT7wQE8X1nkGiuQmJaBMEHuV\"]},\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/DelegateBEP20.sol\":{\"keccak256\":\"0xe689f63578d2cefae8df332344b5102238c541ad92ff67ce96180dacac409269\",\"urls\":[\"bzz-raw://de09b8aed881e63ea701087629c46e514c3d7049940c51c033ceed4500987c8c\",\"dweb:/ipfs/QmR3wkPcaRcbVYLaHxsL6isMEfzteyui3Unbx6H1DPW8FJ\"]},\"/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0x2748ac210641b71a66974d449996ce71dee0efca4f1c6f948ffa08fb959929cb\",\"urls\":[\"bzz-raw://d82927eef0fd44241466a52708b4979f65b5152b77879eda774d2839a8128680\",\"dweb:/ipfs/QmcCx6rCwiuf47V4SQjEqaTAvgCvaeirhb91yEcJMUJfhu\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9486045e189facd2e868ece35249872598ef03f1087fb6fa4d1161842daa2287\",\"urls\":[\"bzz-raw://77c3a04ef8453788b14b1ebbc24dd3f0a18ceb2615cd156aac949a611e552af8\",\"dweb:/ipfs/QmcmqWGguRM3iLuF57tcyrN3F6EA63kzeNkDfQuteBnurr\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405269d3c21bcecceda1000000600c553480156200001f57600080fd5b5060405162002a3638038062002a36833981810160405260608110156200004557600080fd5b815160208301516040808501805191519395929483019291846401000000008211156200007157600080fd5b9083019060208201858111156200008757600080fd5b8251866020820283011164010000000082111715620000a557600080fd5b82525081516020918201928201910280838360005b83811015620000d4578181015183820152602001620000ba565b505050509050016040525050506040518060400160405280600d81526020016c2129ba30b13632902a37b5b2b760991b815250604051806040016040528060038152602001621094d560ea1b81525081600390805190602001906200013b92919062000a1b565b5080516200015190600490602084019062000a1b565b50506005805460ff19166012179055506000620001766001600160e01b036200033016565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519192509060009060008051602062002a16833981519152908290a3508051600a146200020a576040805162461bcd60e51b815260206004820152601d60248201527f6f6e6c79206861766520313020696e766573746f722061646472657373000000604482015290519081900360640190fd5b816001600160a01b0316836001600160a01b0316141562000272576040805162461bcd60e51b815260206004820181905260248201527f425354546f6b656e3a206f776e65722063616e2774206265206d696e7465722e604482015290519081900360640190fd5b6001600160a01b038216620002b95760405162461bcd60e51b8152600401808060200182810382526024815260200180620029b56024913960400191505060405180910390fd5b620002cd836001600160e01b036200033516565b600b80546001600160a01b0319166001600160a01b03841617905560005b600a81101562000326576200031d8282815181106200030657fe5b6020026020010151600c546200045260201b60201c565b600101620002eb565b5050505062000abd565b335b90565b620003486001600160e01b036200033016565b6001600160a01b0316620003646001600160e01b036200049d16565b6001600160a01b031614620003c0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620004075760405162461bcd60e51b81526004018080602001828103825260268152602001806200298f6026913960400191505060405180910390fd5b600a546040516001600160a01b0380841692169060008051602062002a1683398151915290600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b620004698282620004ac60201b620018581760201c565b6001600160a01b03808316600090815260066020526040812054620004999216836001600160e01b03620005c416565b5050565b600a546001600160a01b031690565b6001600160a01b03821662000508576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200051f600083836001600160e01b036200074316565b6200053b816002546200074860201b620013611790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200056e9183906200136162000748821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b816001600160a01b0316836001600160a01b031614158015620005e75750600081115b1562000743576001600160a01b0383161562000698576001600160a01b03831660009081526008602052604081205463ffffffff1690816200062b5760006200065d565b6001600160a01b038516600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b905060006200067b8483620007aa60201b620019541790919060201c565b905062000694868484846001600160e01b036200080816565b5050505b6001600160a01b0382161562000743576001600160a01b03821660009081526008602052604081205463ffffffff169081620006d657600062000708565b6001600160a01b038416600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b905060006200072684836200074860201b620013611790919060201c565b90506200073f858484846001600160e01b036200080816565b5050505b505050565b600082820183811015620007a3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60008282111562000802576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600062000838436040518060600160405280603d8152602001620029d9603d91396001600160e01b036200097c16565b905060008463ffffffff161180156200088257506001600160a01b038516600090815260076020908152604080832063ffffffff6000198901811685529252909120548282169116145b15620008c1576001600160a01b038516600090815260076020908152604080832063ffffffff6000198901168452909152902060010182905562000932565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600784528681208b8616825284528681209551865490861663ffffffff19918216178755925160019687015590815260089092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b600081640100000000841062000a135760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620009d7578181015183820152602001620009bd565b50505050905090810190601f16801562000a055780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b509192915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000a5e57805160ff191683800117855562000a8e565b8280016001018555821562000a8e579182015b8281111562000a8e57825182559160200191906001019062000a71565b5062000a9c92915062000aa0565b5090565b6200033291905b8082111562000a9c576000815560010162000aa7565b611ec28062000acd6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063782d6fe1116100f9578063b4b5ea5711610097578063dd62ed3e11610071578063dd62ed3e14610585578063e7a324dc146105b3578063f1127ed8146105bb578063f2fde38b1461060d576101c4565b8063b4b5ea5714610510578063c3cda52014610536578063d6b9a5971461057d576101c4565b80638da5cb5b116100d35780638da5cb5b146104a857806395d89b41146104b0578063a457c2d7146104b8578063a9059cbb146104e4576101c4565b8063782d6fe11461042a57806379cc6790146104565780637ecebe0014610482576101c4565b806339509351116101665780635c19a95c116101405780635c19a95c146103975780636fcfff45146103bd57806370a08231146103fc578063715018a614610422576101c4565b8063395093511461032057806340c10f191461034c57806342966c681461037a576101c4565b806318160ddd116101a257806318160ddd146102aa57806320606b70146102c457806323b872dd146102cc578063313ce56714610302576101c4565b806306fdde03146101c95780630754617214610246578063095ea7b31461026a575b600080fd5b6101d1610633565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024e6106c9565b604080516001600160a01b039092168252519081900360200190f35b6102966004803603604081101561028057600080fd5b506001600160a01b0381351690602001356106d8565b604080519115158252519081900360200190f35b6102b26106f6565b60408051918252519081900360200190f35b6102b26106fc565b610296600480360360608110156102e257600080fd5b506001600160a01b03813581169160208101359091169060400135610717565b61030a6107a4565b6040805160ff9092168252519081900360200190f35b6102966004803603604081101561033657600080fd5b506001600160a01b0381351690602001356107ad565b6103786004803603604081101561036257600080fd5b506001600160a01b038135169060200135610801565b005b6103786004803603602081101561039057600080fd5b50356108ba565b610378600480360360208110156103ad57600080fd5b50356001600160a01b03166108ce565b6103e3600480360360208110156103d357600080fd5b50356001600160a01b03166108d8565b6040805163ffffffff9092168252519081900360200190f35b6102b26004803603602081101561041257600080fd5b50356001600160a01b03166108f0565b61037861090b565b6102b26004803603604081101561044057600080fd5b506001600160a01b0381351690602001356109c9565b6103786004803603604081101561046c57600080fd5b506001600160a01b038135169060200135610bd1565b6102b26004803603602081101561049857600080fd5b50356001600160a01b0316610c31565b61024e610c43565b6101d1610c52565b610296600480360360408110156104ce57600080fd5b506001600160a01b038135169060200135610cb3565b610296600480360360408110156104fa57600080fd5b506001600160a01b038135169060200135610d21565b6102b26004803603602081101561052657600080fd5b50356001600160a01b0316610d35565b610378600480360360c081101561054c57600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610d99565b6102b261100f565b6102b26004803603604081101561059b57600080fd5b506001600160a01b0381358116916020013516611015565b6102b2611040565b6105ed600480360360408110156105d157600080fd5b5080356001600160a01b0316906020013563ffffffff1661105b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103786004803603602081101561062357600080fd5b50356001600160a01b0316611088565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106bf5780601f10610694576101008083540402835291602001916106bf565b820191906000526020600020905b8154815290600101906020018083116106a257829003601f168201915b5050505050905090565b600b546001600160a01b031681565b60006106ec6106e561119d565b84846111a1565b5060015b92915050565b60025490565b604051806043611d1982396043019050604051809103902081565b600061072484848461128d565b61079a8461073061119d565b61079585604051806060016040528060288152602001611c5a602891396001600160a01b038a1660009081526001602052604081209061076e61119d565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6112ca16565b6111a1565b5060019392505050565b60055460ff1690565b60006106ec6107ba61119d565b8461079585600160006107cb61119d565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61136116565b600b546001600160a01b03163314610858576040805162461bcd60e51b81526020600482015260156024820152742129aa2a37b5b2b71d37b7363c9036b4b73a32b91760591b604482015290519081900360640190fd5b6001600160a01b0382166108ac576040805162461bcd60e51b8152602060048201526016602482015275425354546f6b656e3a206e6f2030206164647265737360501b604482015290519081900360640190fd5b6108b682826113bb565b5050565b6108cb6108c561119d565b826113ea565b50565b6108cb33826114f2565b60086020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526020819052604090205490565b61091361119d565b6001600160a01b0316610924610c43565b6001600160a01b03161461097f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b6000438210610a095760405162461bcd60e51b8152600401808060200182810382526030815260200180611c2a6030913960400191505060405180910390fd5b6001600160a01b03831660009081526008602052604090205463ffffffff1680610a375760009150506106f0565b6001600160a01b038416600090815260076020908152604080832063ffffffff600019860181168552925290912054168310610aa6576001600160a01b03841660009081526007602090815260408083206000199490940163ffffffff168352929052206001015490506106f0565b6001600160a01b038416600090815260076020908152604080832083805290915290205463ffffffff16831015610ae15760009150506106f0565b600060001982015b8163ffffffff168163ffffffff161115610b9a57600282820363ffffffff16048103610b13611b74565b506001600160a01b038716600090815260076020908152604080832063ffffffff808616855290835292819020815180830190925280549093168082526001909301549181019190915290871415610b75576020015194506106f09350505050565b805163ffffffff16871115610b8c57819350610b93565b6001820392505b5050610ae9565b506001600160a01b038516600090815260076020908152604080832063ffffffff9094168352929052206001015491505092915050565b6000610c0e82604051806060016040528060248152602001611e4760249139610c0186610bfc61119d565b611015565b919063ffffffff6112ca16565b9050610c2283610c1c61119d565b836111a1565b610c2c83836113ea565b505050565b60096020526000908152604090205481565b600a546001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106bf5780601f10610694576101008083540402835291602001916106bf565b60006106ec610cc061119d565b8461079585604051806060016040528060258152602001611da56025913960016000610cea61119d565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6112ca16565b60006106ec610d2e61119d565b848461128d565b6001600160a01b03811660009081526008602052604081205463ffffffff1680610d60576000610d92565b6001600160a01b038316600090815260076020908152604080832063ffffffff60001986011684529091529020600101545b9392505050565b60006040518080611d196043913960430190506040518091039020610dbc610633565b80519060200120610dcb6115a4565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b0316815260200194505050505060405160208183030381529060405280519060200120905060006040518080611e0d603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa158015610f09573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f5b5760405162461bcd60e51b815260040180806020018281038252602f815260200180611bfb602f913960400191505060405180910390fd5b6001600160a01b03811660009081526009602052604090208054600181019091558914610fb95760405162461bcd60e51b815260040180806020018281038252602b815260200180611cee602b913960400191505060405180910390fd5b87421115610ff85760405162461bcd60e51b815260040180806020018281038252602f815260200180611c82602f913960400191505060405180910390fd5b611002818b6114f2565b505050505b505050505050565b600c5481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60405180603a611e0d8239603a019050604051809103902081565b60076020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b61109061119d565b6001600160a01b03166110a1610c43565b6001600160a01b0316146110fc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166111415760405162461bcd60e51b8152600401808060200182810382526026815260200180611bd56026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b0383166111e65760405162461bcd60e51b8152600401808060200182810382526024815260200180611bb16024913960400191505060405180910390fd5b6001600160a01b03821661122b5760405162461bcd60e51b8152600401808060200182810382526022815260200180611e6b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6112988383836115a8565b6001600160a01b03808416600090815260066020526040808220548584168352912054610c2c9291821691168361170f565b600081848411156113595760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561131e578181015183820152602001611306565b50505050905090810190601f16801561134b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610d92576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6113c58282611858565b6001600160a01b038083166000908152600660205260408120546108b692168361170f565b6001600160a01b03821661142f5760405162461bcd60e51b8152600401808060200182810382526021815260200180611dca6021913960400191505060405180910390fd5b61143b82600083610c2c565b61147e81604051806060016040528060228152602001611deb602291396001600160a01b038516600090815260208190526040902054919063ffffffff6112ca16565b6001600160a01b0383166000908152602081905260409020556002546114aa908263ffffffff61195416565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b0380831660009081526006602052604081205490911690611519846108f0565b6001600160a01b03858116600090815260066020526040902080546001600160a01b031916918616919091179055905061155482848361170f565b826001600160a01b0316826001600160a01b0316856001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a450505050565b4690565b6001600160a01b0383166115ed5760405162461bcd60e51b8152600401808060200182810382526025815260200180611b8c6025913960400191505060405180910390fd5b6001600160a01b0382166116325760405162461bcd60e51b8152600401808060200182810382526023815260200180611d826023913960400191505060405180910390fd5b61163d838383610c2c565b61168081604051806060016040528060268152602001611d5c602691396001600160a01b038616600090815260208190526040902054919063ffffffff6112ca16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546116b5908263ffffffff61136116565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b816001600160a01b0316836001600160a01b0316141580156117315750600081115b15610c2c576001600160a01b038316156117c9576001600160a01b03831660009081526008602052604081205463ffffffff1690816117715760006117a3565b6001600160a01b038516600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b905060006117b7828563ffffffff61195416565b90506117c5868484846119b1565b5050505b6001600160a01b03821615610c2c576001600160a01b03821660009081526008602052604081205463ffffffff169081611804576000611836565b6001600160a01b038416600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b9050600061184a828563ffffffff61136116565b9050611007858484846119b1565b6001600160a01b0382166118b3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6118bf60008383610c2c565b6002546118d2908263ffffffff61136116565b6002556001600160a01b0382166000908152602081905260409020546118fe908263ffffffff61136116565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828211156119ab576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006119d5436040518060600160405280603d8152602001611cb1603d9139611b16565b905060008463ffffffff16118015611a1e57506001600160a01b038516600090815260076020908152604080832063ffffffff6000198901811685529252909120548282169116145b15611a5b576001600160a01b038516600090815260076020908152604080832063ffffffff60001989011684529091529020600101829055611acc565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600784528681208b8616825284528681209551865490861663ffffffff19918216178755925160019687015590815260089092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b6000816401000000008410611b6c5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561131e578181015183820152602001611306565b509192915050565b60408051808201909152600080825260208201529056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737344656c6567617465546f6b656e3a3a64656c656761746542795369673a20696e76616c6964207369676e617475726544656c6567617465546f6b656e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656442455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636544656c6567617465546f6b656e3a3a64656c656761746542795369673a207369676e6174757265206578706972656444656c6567617465546f6b656e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747344656c6567617465546f6b656e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e74726163742942455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636544656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792942455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220688a399b3100a7aeda5a4f1684062c5ff05e11eace8ab72db47d9d166742894864736f6c634300060600334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373425354546f6b656e3a206d696e7465725f2063616e27742062652030206164647265737344656c6567617465546f6b656e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063782d6fe1116100f9578063b4b5ea5711610097578063dd62ed3e11610071578063dd62ed3e14610585578063e7a324dc146105b3578063f1127ed8146105bb578063f2fde38b1461060d576101c4565b8063b4b5ea5714610510578063c3cda52014610536578063d6b9a5971461057d576101c4565b80638da5cb5b116100d35780638da5cb5b146104a857806395d89b41146104b0578063a457c2d7146104b8578063a9059cbb146104e4576101c4565b8063782d6fe11461042a57806379cc6790146104565780637ecebe0014610482576101c4565b806339509351116101665780635c19a95c116101405780635c19a95c146103975780636fcfff45146103bd57806370a08231146103fc578063715018a614610422576101c4565b8063395093511461032057806340c10f191461034c57806342966c681461037a576101c4565b806318160ddd116101a257806318160ddd146102aa57806320606b70146102c457806323b872dd146102cc578063313ce56714610302576101c4565b806306fdde03146101c95780630754617214610246578063095ea7b31461026a575b600080fd5b6101d1610633565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024e6106c9565b604080516001600160a01b039092168252519081900360200190f35b6102966004803603604081101561028057600080fd5b506001600160a01b0381351690602001356106d8565b604080519115158252519081900360200190f35b6102b26106f6565b60408051918252519081900360200190f35b6102b26106fc565b610296600480360360608110156102e257600080fd5b506001600160a01b03813581169160208101359091169060400135610717565b61030a6107a4565b6040805160ff9092168252519081900360200190f35b6102966004803603604081101561033657600080fd5b506001600160a01b0381351690602001356107ad565b6103786004803603604081101561036257600080fd5b506001600160a01b038135169060200135610801565b005b6103786004803603602081101561039057600080fd5b50356108ba565b610378600480360360208110156103ad57600080fd5b50356001600160a01b03166108ce565b6103e3600480360360208110156103d357600080fd5b50356001600160a01b03166108d8565b6040805163ffffffff9092168252519081900360200190f35b6102b26004803603602081101561041257600080fd5b50356001600160a01b03166108f0565b61037861090b565b6102b26004803603604081101561044057600080fd5b506001600160a01b0381351690602001356109c9565b6103786004803603604081101561046c57600080fd5b506001600160a01b038135169060200135610bd1565b6102b26004803603602081101561049857600080fd5b50356001600160a01b0316610c31565b61024e610c43565b6101d1610c52565b610296600480360360408110156104ce57600080fd5b506001600160a01b038135169060200135610cb3565b610296600480360360408110156104fa57600080fd5b506001600160a01b038135169060200135610d21565b6102b26004803603602081101561052657600080fd5b50356001600160a01b0316610d35565b610378600480360360c081101561054c57600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610d99565b6102b261100f565b6102b26004803603604081101561059b57600080fd5b506001600160a01b0381358116916020013516611015565b6102b2611040565b6105ed600480360360408110156105d157600080fd5b5080356001600160a01b0316906020013563ffffffff1661105b565b6040805163ffffffff909316835260208301919091528051918290030190f35b6103786004803603602081101561062357600080fd5b50356001600160a01b0316611088565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106bf5780601f10610694576101008083540402835291602001916106bf565b820191906000526020600020905b8154815290600101906020018083116106a257829003601f168201915b5050505050905090565b600b546001600160a01b031681565b60006106ec6106e561119d565b84846111a1565b5060015b92915050565b60025490565b604051806043611d1982396043019050604051809103902081565b600061072484848461128d565b61079a8461073061119d565b61079585604051806060016040528060288152602001611c5a602891396001600160a01b038a1660009081526001602052604081209061076e61119d565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6112ca16565b6111a1565b5060019392505050565b60055460ff1690565b60006106ec6107ba61119d565b8461079585600160006107cb61119d565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61136116565b600b546001600160a01b03163314610858576040805162461bcd60e51b81526020600482015260156024820152742129aa2a37b5b2b71d37b7363c9036b4b73a32b91760591b604482015290519081900360640190fd5b6001600160a01b0382166108ac576040805162461bcd60e51b8152602060048201526016602482015275425354546f6b656e3a206e6f2030206164647265737360501b604482015290519081900360640190fd5b6108b682826113bb565b5050565b6108cb6108c561119d565b826113ea565b50565b6108cb33826114f2565b60086020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526020819052604090205490565b61091361119d565b6001600160a01b0316610924610c43565b6001600160a01b03161461097f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b6000438210610a095760405162461bcd60e51b8152600401808060200182810382526030815260200180611c2a6030913960400191505060405180910390fd5b6001600160a01b03831660009081526008602052604090205463ffffffff1680610a375760009150506106f0565b6001600160a01b038416600090815260076020908152604080832063ffffffff600019860181168552925290912054168310610aa6576001600160a01b03841660009081526007602090815260408083206000199490940163ffffffff168352929052206001015490506106f0565b6001600160a01b038416600090815260076020908152604080832083805290915290205463ffffffff16831015610ae15760009150506106f0565b600060001982015b8163ffffffff168163ffffffff161115610b9a57600282820363ffffffff16048103610b13611b74565b506001600160a01b038716600090815260076020908152604080832063ffffffff808616855290835292819020815180830190925280549093168082526001909301549181019190915290871415610b75576020015194506106f09350505050565b805163ffffffff16871115610b8c57819350610b93565b6001820392505b5050610ae9565b506001600160a01b038516600090815260076020908152604080832063ffffffff9094168352929052206001015491505092915050565b6000610c0e82604051806060016040528060248152602001611e4760249139610c0186610bfc61119d565b611015565b919063ffffffff6112ca16565b9050610c2283610c1c61119d565b836111a1565b610c2c83836113ea565b505050565b60096020526000908152604090205481565b600a546001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106bf5780601f10610694576101008083540402835291602001916106bf565b60006106ec610cc061119d565b8461079585604051806060016040528060258152602001611da56025913960016000610cea61119d565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6112ca16565b60006106ec610d2e61119d565b848461128d565b6001600160a01b03811660009081526008602052604081205463ffffffff1680610d60576000610d92565b6001600160a01b038316600090815260076020908152604080832063ffffffff60001986011684529091529020600101545b9392505050565b60006040518080611d196043913960430190506040518091039020610dbc610633565b80519060200120610dcb6115a4565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b0316815260200194505050505060405160208183030381529060405280519060200120905060006040518080611e0d603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a08401835280519082012061190160f01b60c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a28083019392601f198301929081900390910190855afa158015610f09573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f5b5760405162461bcd60e51b815260040180806020018281038252602f815260200180611bfb602f913960400191505060405180910390fd5b6001600160a01b03811660009081526009602052604090208054600181019091558914610fb95760405162461bcd60e51b815260040180806020018281038252602b815260200180611cee602b913960400191505060405180910390fd5b87421115610ff85760405162461bcd60e51b815260040180806020018281038252602f815260200180611c82602f913960400191505060405180910390fd5b611002818b6114f2565b505050505b505050505050565b600c5481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60405180603a611e0d8239603a019050604051809103902081565b60076020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b61109061119d565b6001600160a01b03166110a1610c43565b6001600160a01b0316146110fc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166111415760405162461bcd60e51b8152600401808060200182810382526026815260200180611bd56026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b0383166111e65760405162461bcd60e51b8152600401808060200182810382526024815260200180611bb16024913960400191505060405180910390fd5b6001600160a01b03821661122b5760405162461bcd60e51b8152600401808060200182810382526022815260200180611e6b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6112988383836115a8565b6001600160a01b03808416600090815260066020526040808220548584168352912054610c2c9291821691168361170f565b600081848411156113595760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561131e578181015183820152602001611306565b50505050905090810190601f16801561134b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610d92576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6113c58282611858565b6001600160a01b038083166000908152600660205260408120546108b692168361170f565b6001600160a01b03821661142f5760405162461bcd60e51b8152600401808060200182810382526021815260200180611dca6021913960400191505060405180910390fd5b61143b82600083610c2c565b61147e81604051806060016040528060228152602001611deb602291396001600160a01b038516600090815260208190526040902054919063ffffffff6112ca16565b6001600160a01b0383166000908152602081905260409020556002546114aa908263ffffffff61195416565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b0380831660009081526006602052604081205490911690611519846108f0565b6001600160a01b03858116600090815260066020526040902080546001600160a01b031916918616919091179055905061155482848361170f565b826001600160a01b0316826001600160a01b0316856001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a450505050565b4690565b6001600160a01b0383166115ed5760405162461bcd60e51b8152600401808060200182810382526025815260200180611b8c6025913960400191505060405180910390fd5b6001600160a01b0382166116325760405162461bcd60e51b8152600401808060200182810382526023815260200180611d826023913960400191505060405180910390fd5b61163d838383610c2c565b61168081604051806060016040528060268152602001611d5c602691396001600160a01b038616600090815260208190526040902054919063ffffffff6112ca16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546116b5908263ffffffff61136116565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b816001600160a01b0316836001600160a01b0316141580156117315750600081115b15610c2c576001600160a01b038316156117c9576001600160a01b03831660009081526008602052604081205463ffffffff1690816117715760006117a3565b6001600160a01b038516600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b905060006117b7828563ffffffff61195416565b90506117c5868484846119b1565b5050505b6001600160a01b03821615610c2c576001600160a01b03821660009081526008602052604081205463ffffffff169081611804576000611836565b6001600160a01b038416600090815260076020908152604080832063ffffffff60001987011684529091529020600101545b9050600061184a828563ffffffff61136116565b9050611007858484846119b1565b6001600160a01b0382166118b3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6118bf60008383610c2c565b6002546118d2908263ffffffff61136116565b6002556001600160a01b0382166000908152602081905260409020546118fe908263ffffffff61136116565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828211156119ab576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006119d5436040518060600160405280603d8152602001611cb1603d9139611b16565b905060008463ffffffff16118015611a1e57506001600160a01b038516600090815260076020908152604080832063ffffffff6000198901811685529252909120548282169116145b15611a5b576001600160a01b038516600090815260076020908152604080832063ffffffff60001989011684529091529020600101829055611acc565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600784528681208b8616825284528681209551865490861663ffffffff19918216178755925160019687015590815260089092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b6000816401000000008410611b6c5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561131e578181015183820152602001611306565b509192915050565b60408051808201909152600080825260208201529056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737344656c6567617465546f6b656e3a3a64656c656761746542795369673a20696e76616c6964207369676e617475726544656c6567617465546f6b656e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656442455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636544656c6567617465546f6b656e3a3a64656c656761746542795369673a207369676e6174757265206578706972656444656c6567617465546f6b656e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747344656c6567617465546f6b656e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e74726163742942455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636544656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792942455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220688a399b3100a7aeda5a4f1684062c5ff05e11eace8ab72db47d9d166742894864736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "179:949:3:-:0;;;294:15;257:52;;316:541;5:9:-1;2:2;;;27:1;24;17:12;2:2;316:541:3;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;316:541:3;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;316:541:3;;421:4:-1;412:14;;;;316:541:3;;;;;412:14:-1;316:541:3;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;316:541:3;;;;;;;;;;;2075:140:0;;;;;;;;;;;;;-1:-1:-1;;;2075:140:0;;;;;;;;;;;;;;;;-1:-1:-1;;;2075:140:0;;;2154:4;2146:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2168:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2194:9:0;:14;;-1:-1:-1;;2194:14:0;2206:2;2194:14;;;-1:-1:-1;2194:9:0;904:12:15;-1:-1:-1;;;;;904:10:15;:12;:::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:15;-1:-1:-1;;;;;926:18:15;;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:15;-1:-1:-1;;;;;;;;;;;;;959:43:15;-1:-1:-1;;959:43:15;850:159;474:9:3::1;:16;494:2;474:22;466:64;;;::::0;;-1:-1:-1;;;466:64:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;558:7;-1:-1:-1::0;;;;;548:17:3::1;:6;-1:-1:-1::0;;;;;548:17:3::1;;;540:62;;;::::0;;-1:-1:-1;;;540:62:3;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;620:21:3;::::1;612:70;;;;-1:-1:-1::0;;;612:70:3::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;692:25;710:6:::0;-1:-1:-1;;;;;692:17:3::1;:25:::0;:::i:1;:::-;727:6;:16:::0;;-1:-1:-1;;;;;;727:16:3::1;-1:-1:-1::0;;;;;727:16:3;::::1;;::::0;;-1:-1:-1;753:98:3::1;777:2;773:1;:6;753:98;;;800:40;806:9;816:1;806:12;;;;;;;;;;;;;;820:19;;800:5;;;:40;;:::i;:::-;781:3;;753:98;;;;316:541:::0;;;179:949;;598:104:18;685:10;598:104;;:::o;2011:240:15:-;1308:12;-1:-1:-1;;;;;1308:10:15;:12;:::i;:::-;-1:-1:-1;;;;;1297:23:15;:7;-1:-1:-1;;;;;1297:5:15;:7;:::i;:::-;-1:-1:-1;;;;;1297:23:15;;1289:68;;;;;-1:-1:-1;;;1289:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:15;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:15::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:15;;::::1;::::0;2200:6:::1;::::0;-1:-1:-1;;;;;;;;;;;2179:38:15;2200:6:::1;::::0;2179:38:::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:15::1;-1:-1:-1::0;;;;;2227:17:15;;;::::1;::::0;;;::::1;::::0;;2011:240::o;1180:224:5:-;1264:28;1276:7;1285:6;1264:11;;;;;:28;;:::i;:::-;-1:-1:-1;;;;;1369:19:5;;;1365:1;1369:19;;;:10;:19;;;;;;1342:55;;1369:19;1390:6;-1:-1:-1;;;;;1342:14:5;:55;:::i;:::-;1180:224;;:::o;1085:85:15:-;1157:6;;-1:-1:-1;;;;;1157:6:15;1085:85;:::o;8419:370:0:-;-1:-1:-1;;;;;8502:21:0;;8494:65;;;;;-1:-1:-1;;;8494:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:49;8599:1;8603:7;8612:6;-1:-1:-1;;;;;8570:20:0;:49;:::i;:::-;8645:24;8662:6;8645:12;;:16;;;;;;:24;;;;:::i;:::-;8630:12;:39;-1:-1:-1;;;;;8700:18:0;;:9;:18;;;;;;;;;;;;:30;;8723:6;;8700:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8679:18:0;;:9;:18;;;;;;;;;;;:51;;;;8745:37;;;;;;;8679:18;;:9;;8745:37;;;;;;;;;;8419:370;;:::o;5991:929:5:-;6096:6;-1:-1:-1;;;;;6086:16:5;:6;-1:-1:-1;;;;;6086:16:5;;;:30;;;;;6115:1;6106:6;:10;6086:30;6082:832;;;-1:-1:-1;;;;;6136:20:5;;;6132:379;;-1:-1:-1;;;;;6242:22:5;;6223:16;6242:22;;;:14;:22;;;;;;;;;6302:13;:60;;6361:1;6302:60;;;-1:-1:-1;;;;;6318:19:5;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;6338:13:5;;6318:34;;;;;;;;6350:1;6318:40;;6302:60;6282:80;;6380:17;6400:21;6414:6;6400:9;:13;;;;;;:21;;;;:::i;:::-;6380:41;-1:-1:-1;6439:57:5;6456:6;6464:9;6475;6380:41;-1:-1:-1;;;;;6439:16:5;:57;:::i;:::-;6132:379;;;;-1:-1:-1;;;;;6529:20:5;;;6525:379;;-1:-1:-1;;;;;6635:22:5;;6616:16;6635:22;;;:14;:22;;;;;;;;;6695:13;:60;;6754:1;6695:60;;;-1:-1:-1;;;;;6711:19:5;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;6731:13:5;;6711:34;;;;;;;;6743:1;6711:40;;6695:60;6675:80;;6773:17;6793:21;6807:6;6793:9;:13;;;;;;:21;;;;:::i;:::-;6773:41;-1:-1:-1;6832:57:5;6849:6;6857:9;6868;6773:41;-1:-1:-1;;;;;6832:16:5;:57;:::i;:::-;6525:379;;;;5991:929;;;:::o;2690:175:16:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:16:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:16;;;3136:155::o;6926:691:5:-;7093:18;7114:85;7121:12;7114:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7114:6:5;:85;:::i;:::-;7093:106;;7229:1;7214:12;:16;;;:85;;;;-1:-1:-1;;;;;;7234:22:5;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;7257:16:5;;7234:40;;;;;;;;;:50;:65;;;:50;;:65;7214:85;7210:334;;;-1:-1:-1;;;;;7315:22:5;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;7338:16:5;;7315:40;;;;;;;;7353:1;7315:46;:57;;;7210:334;;;7442:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7403:22:5;;-1:-1:-1;7403:22:5;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;7403:72:5;;;;;;;;;;;;;7489:25;;;:14;:25;;;;;;:44;;7517:16;;;7489:44;;;;;;;;;;7210:334;7559:51;;;;;;;;;;;;;;-1:-1:-1;;;;;7559:51:5;;;;;;;;;;;6926:691;;;;;:::o;7623:160::-;7698:6;7737:12;7728:7;7724:11;;7716:34;;;;-1:-1:-1;;;7716:34:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7716:34:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7774:1:5;;7623:160;-1:-1:-1;;7623:160:5:o;179:949:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;179:949:3;;;-1:-1:-1;179:949:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "179:949:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;179:949:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2280:90:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2280:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;229:21:3;;;:::i;:::-;;;;-1:-1:-1;;;;;229:21:3;;;;;;;;;;;;;;4423:202:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4423:202:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3350:98;;;:::i;:::-;;;;;;;;;;;;;;;;696:122:5;;;:::i;5085:439:0:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5085:439:0;;;;;;;;;;;;;;;;;:::i;3200:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5919:289;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5919:289:0;;;;;;;;:::i;913:213:3:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;913:213:3;;;;;;;;:::i;:::-;;440:89:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;440:89:1;;:::i;1781:102:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1781:102:5;-1:-1:-1;;;;;1781:102:5;;:::i;578:48::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;578:48:5;-1:-1:-1;;;;;578:48:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;3506:117:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3506:117:0;-1:-1:-1;;;;;3506:117:0;;:::i;1717:145:15:-;;;:::i;4318:1226:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4318:1226:5;;;;;;;;:::i;835:290:1:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;835:290:1;;;;;;;;:::i;1104:38:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1104:38:5;-1:-1:-1;;;;;1104:38:5;;:::i;1085:85:15:-;;;:::i;2483:94:0:-;;;:::i;6695:386::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6695:386:0;;;;;;;;:::i;3826:208::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3826:208:0;;;;;;;;:::i;3660:236:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3660:236:5;-1:-1:-1;;;;;3660:236:5;;:::i;2306:1160::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;2306:1160:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;257:52:3:-;;;:::i;4092:193:0:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4092:193:0;;;;;;;;;;:::i;909:117:5:-;;;:::i;444:68::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;444:68:5;;-1:-1:-1;;;;;444:68:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2011:240:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2011:240:15;-1:-1:-1;;;;;2011:240:15;;:::i;2280:90:0:-;2358:5;2351:12;;;;;;;;-1:-1:-1;;2351:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2326:13;;2351:12;;2358:5;;2351:12;;2358:5;2351:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:90;:::o;229:21:3:-;;;-1:-1:-1;;;;;229:21:3;;:::o;4423:202:0:-;4538:4;4558:39;4567:12;:10;:12::i;:::-;4581:7;4590:6;4558:8;:39::i;:::-;-1:-1:-1;4614:4:0;4423:202;;;;;:::o;3350:98::-;3429:12;;3350:98;:::o;696:122:5:-;738:80;;;;;;;;;;;;;;;;;;696:122;:::o;5085:439:0:-;5221:4;5237:36;5247:6;5255:9;5266:6;5237:9;:36::i;:::-;5283:213;5305:6;5325:12;:10;:12::i;:::-;5351:135;5406:6;5351:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5351:19:0;;;;;;:11;:19;;;;;;5371:12;:10;:12::i;:::-;-1:-1:-1;;;;;5351:33:0;;;;;;;;;;;;-1:-1:-1;5351:33:0;;;:135;;:37;:135;:::i;:::-;5283:8;:213::i;:::-;-1:-1:-1;5513:4:0;5085:439;;;;;:::o;3200:90::-;3274:9;;;;3200:90;:::o;5919:289::-;6031:4;6051:129;6073:12;:10;:12::i;:::-;6099:7;6120:50;6159:10;6120:11;:25;6132:12;:10;:12::i;:::-;-1:-1:-1;;;;;6120:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;6120:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;913:213:3:-;996:6;;-1:-1:-1;;;;;996:6:3;982:10;:20;974:54;;;;;-1:-1:-1;;;974:54:3;;;;;;;;;;;;-1:-1:-1;;;974:54:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1046:17:3;;1038:52;;;;;-1:-1:-1;;;1038:52:3;;;;;;;;;;;;-1:-1:-1;;;1038:52:3;;;;;;;;;;;;;;;1100:19;1106:3;1111:7;1100:5;:19::i;:::-;913:213;;:::o;440:89:1:-;495:27;501:12;:10;:12::i;:::-;515:6;495:5;:27::i;:::-;440:89;:::o;1781:102:5:-;1844:32;1854:10;1866:9;1844;:32::i;578:48::-;;;;;;;;;;;;;;;:::o;3506:117:0:-;-1:-1:-1;;;;;3598:18:0;3572:7;3598:18;;;;;;;;;;;;3506:117::o;1717:145:15:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:15;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:15;;1289:68;;;;;-1:-1:-1;;;1289:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:6:::1;::::0;1786:40:::1;::::0;1823:1:::1;::::0;-1:-1:-1;;;;;1807:6:15::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1836:6;:19:::0;;-1:-1:-1;;;;;;1836:19:15::1;::::0;;1717:145::o;4318:1226:5:-;4411:7;4456:12;4442:11;:26;4434:87;;;;-1:-1:-1;;;4434:87:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4554:23:5;;4532:19;4554:23;;;:14;:23;;;;;;;;4591:17;4587:56;;4631:1;4624:8;;;;;4587:56;-1:-1:-1;;;;;4700:20:5;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;4721:16:5;;4700:38;;;;;;;;;:48;;:63;-1:-1:-1;4696:145:5;;-1:-1:-1;;;;;4786:20:5;;;;;;:11;:20;;;;;;;;-1:-1:-1;;4807:16:5;;;;4786:38;;;;;;;;4822:1;4786:44;;;-1:-1:-1;4779:51:5;;4696:145;-1:-1:-1;;;;;4899:20:5;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;4895:86:5;;;4969:1;4962:8;;;;;4895:86;4991:12;-1:-1:-1;;5032:16:5;;5058:430;5073:5;5065:13;;:5;:13;;;5058:430;;;5136:1;5119:13;;;5118:19;;;5110:27;;5190:20;;:::i;:::-;-1:-1:-1;;;;;;5213:20:5;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;5190:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5259:27;;5255:223;;;5313:8;;;;-1:-1:-1;5306:15:5;;-1:-1:-1;;;;5306:15:5;5255:223;5346:12;;:26;;;-1:-1:-1;5342:136:5;;;5400:6;5392:14;;5342:136;;;5462:1;5453:6;:10;5445:18;;5342:136;5058:430;;;;;-1:-1:-1;;;;;;5504:20:5;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;4318:1226:5;;;;:::o;835:290:1:-;911:26;940:84;977:6;940:84;;;;;;;;;;;;;;;;;:32;950:7;959:12;:10;:12::i;:::-;940:9;:32::i;:::-;:36;:84;;:36;:84;:::i;:::-;911:113;;1035:51;1044:7;1053:12;:10;:12::i;:::-;1067:18;1035:8;:51::i;:::-;1096:22;1102:7;1111:6;1096:5;:22::i;:::-;835:290;;;:::o;1104:38:5:-;;;;;;;;;;;;;:::o;1085:85:15:-;1157:6;;-1:-1:-1;;;;;1157:6:15;1085:85;:::o;2483:94:0:-;2563:7;2556:14;;;;;;;;-1:-1:-1;;2556:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2531:13;;2556:14;;2563:7;;2556:14;;2563:7;2556:14;;;;;;;;;;;;;;;;;;;;;;;;6695:386;6812:4;6832:221;6854:12;:10;:12::i;:::-;6880:7;6901:142;6957:15;6901:142;;;;;;;;;;;;;;;;;:11;:25;6913:12;:10;:12::i;:::-;-1:-1:-1;;;;;6901:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;6901:25:0;;;:34;;;;;;;;;;;:142;;:38;:142;:::i;3826:208::-;3944:4;3964:42;3974:12;:10;:12::i;:::-;3988:9;3999:6;3964:9;:42::i;3660:236:5:-;-1:-1:-1;;;;;3782:23:5;;3737:7;3782:23;;;:14;:23;;;;;;;;3822:16;:67;;3888:1;3822:67;;;-1:-1:-1;;;;;3841:20:5;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;3862:16:5;;3841:38;;;;;;;;3877:1;3841:44;;3822:67;3815:74;3660:236;-1:-1:-1;;;3660:236:5:o;2306:1160::-;2485:23;738:80;;;;;;;;;;;;;;;;;;;2611:6;:4;:6::i;:::-;2595:24;;;;;;2637:12;:10;:12::i;:::-;2675:4;2534:160;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2534:160:5;-1:-1:-1;;;;;2534:160:5;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2534:160:5;;;2511:193;;;;;;2485:219;;2715:18;955:71;;;;;;;;;;;;;;;;;;;2759:135;;;;;;;;-1:-1:-1;;;;;2759:135:5;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2759:135:5;;;;;2736:168;;;;;;-1:-1:-1;;;2955:119:5;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2955:119:5;;;;;;2932:152;;;;;;;;;-1:-1:-1;3115:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2736:168;;-1:-1:-1;2932:152:5;;-1:-1:-1;;;3115:26:5;;;;;;;2759:135;-1:-1:-1;;3115:26:5;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3115:26:5;;-1:-1:-1;;3115:26:5;;;-1:-1:-1;;;;;;;3159:23:5;;3151:83;;;;-1:-1:-1;;;3151:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3261:17:5;;;;;;:6;:17;;;;;:19;;;;;;;;3252:28;;3244:84;;;;-1:-1:-1;;;3244:84:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:6;3346:3;:13;;3338:73;;;;-1:-1:-1;;;3338:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3428:31;3438:9;3449;3428;:31::i;:::-;3421:38;;;;2306:1160;;;;;;;:::o;257:52:3:-;;;;:::o;4092:193:0:-;-1:-1:-1;;;;;4251:18:0;;;4221:7;4251:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4092:193::o;909:117:5:-;955:71;;;;;;;;;;;;;;;;;;909:117;:::o;444:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2011:240:15:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:15;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:15;;1289:68;;;;;-1:-1:-1;;;1289:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:15;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:15::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:15;;::::1;::::0;2200:6:::1;::::0;2179:38:::1;::::0;2200:6:::1;::::0;2179:38:::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:15::1;-1:-1:-1::0;;;;;2227:17:15;;;::::1;::::0;;;::::1;::::0;;2011:240::o;598:104:18:-;685:10;598:104;:::o;9975:370:0:-;-1:-1:-1;;;;;10106:19:0;;10098:68;;;;-1:-1:-1;;;10098:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10184:21:0;;10176:68;;;;-1:-1:-1;;;10176:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10255:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10306:32;;;;;;;;;;;;;;;;;9975:370;;;:::o;1411:230:5:-;1517:42;1533:6;1541:9;1552:6;1517:15;:42::i;:::-;-1:-1:-1;;;;;1584:18:5;;;;;;;:10;:18;;;;;;;1604:21;;;;;;;;1569:65;;1584:18;;;;1604:21;1627:6;1569:14;:65::i;5432:163:16:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5537:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:16;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:16;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:224:5;1264:28;1276:7;1285:6;1264:11;:28::i;:::-;-1:-1:-1;;;;;1369:19:5;;;1365:1;1369:19;;;:10;:19;;;;;;1342:55;;1369:19;1390:6;1342:14;:55::i;9108:444:0:-;-1:-1:-1;;;;;9191:21:0;;9183:67;;;;-1:-1:-1;;;9183:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9261:49;9282:7;9299:1;9303:6;9261:20;:49::i;:::-;9342:102;9378:6;9342:102;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9342:18:0;;:9;:18;;;;;;;;;;;;:102;;:22;:102;:::i;:::-;-1:-1:-1;;;;;9321:18:0;;:9;:18;;;;;;;;;;:123;9469:12;;:24;;9486:6;9469:24;:16;:24;:::i;:::-;9454:12;:39;9508:37;;;;;;;;9534:1;;-1:-1:-1;;;;;9508:37:0;;;;;;;;;;;;9108:444;;:::o;5550:435:5:-;-1:-1:-1;;;;;5660:21:5;;;5634:23;5660:21;;;:10;:21;;;;;;;;;;5718:20;5671:9;5718;:20::i;:::-;-1:-1:-1;;;;;5804:21:5;;;;;;;:10;:21;;;;;:33;;-1:-1:-1;;;;;;5804:33:5;;;;;;;;;;5691:47;-1:-1:-1;5848:60:5;5863:15;5804:33;5691:47;5848:14;:60::i;:::-;5968:9;-1:-1:-1;;;;;5924:54:5;5951:15;-1:-1:-1;;;;;5924:54:5;5940:9;-1:-1:-1;;;;;5924:54:5;;;;;;;;;;;5550:435;;;;:::o;7789:148::-;7896:9;7789:148;:::o;7555:594:0:-;-1:-1:-1;;;;;7690:20:0;;7682:70;;;;-1:-1:-1;;;7682:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7770:23:0;;7762:71;;;;-1:-1:-1;;;7762:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7844:47;7865:6;7873:9;7884:6;7844:20;:47::i;:::-;7922:105;7957:6;7922:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7922:17:0;;:9;:17;;;;;;;;;;;;:105;;:21;:105;:::i;:::-;-1:-1:-1;;;;;7902:17:0;;;:9;:17;;;;;;;;;;;:125;;;;8060:20;;;;;;;:32;;8085:6;8060:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;8037:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;8107:35;;;;;;;8037:20;;8107:35;;;;;;;;;;;;;7555:594;;;:::o;5991:929:5:-;6096:6;-1:-1:-1;;;;;6086:16:5;:6;-1:-1:-1;;;;;6086:16:5;;;:30;;;;;6115:1;6106:6;:10;6086:30;6082:832;;;-1:-1:-1;;;;;6136:20:5;;;6132:379;;-1:-1:-1;;;;;6242:22:5;;6223:16;6242:22;;;:14;:22;;;;;;;;;6302:13;:60;;6361:1;6302:60;;;-1:-1:-1;;;;;6318:19:5;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;6338:13:5;;6318:34;;;;;;;;6350:1;6318:40;;6302:60;6282:80;-1:-1:-1;6380:17:5;6400:21;6282:80;6414:6;6400:21;:13;:21;:::i;:::-;6380:41;;6439:57;6456:6;6464:9;6475;6486;6439:16;:57::i;:::-;6132:379;;;;-1:-1:-1;;;;;6529:20:5;;;6525:379;;-1:-1:-1;;;;;6635:22:5;;6616:16;6635:22;;;:14;:22;;;;;;;;;6695:13;:60;;6754:1;6695:60;;;-1:-1:-1;;;;;6711:19:5;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;6731:13:5;;6711:34;;;;;;;;6743:1;6711:40;;6695:60;6675:80;-1:-1:-1;6773:17:5;6793:21;6675:80;6807:6;6793:21;:13;:21;:::i;:::-;6773:41;;6832:57;6849:6;6857:9;6868;6879;6832:16;:57::i;8419:370:0:-;-1:-1:-1;;;;;8502:21:0;;8494:65;;;;;-1:-1:-1;;;8494:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:49;8599:1;8603:7;8612:6;8570:20;:49::i;:::-;8645:12;;:24;;8662:6;8645:24;:16;:24;:::i;:::-;8630:12;:39;-1:-1:-1;;;;;8700:18:0;;:9;:18;;;;;;;;;;;:30;;8723:6;8700:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8679:18:0;;:9;:18;;;;;;;;;;;:51;;;;8745:37;;;;;;;8679:18;;:9;;8745:37;;;;;;;;;;8419:370;;:::o;3136:155:16:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:16;;;3136:155::o;6926:691:5:-;7093:18;7114:85;7121:12;7114:85;;;;;;;;;;;;;;;;;:6;:85::i;:::-;7093:106;;7229:1;7214:12;:16;;;:85;;;;-1:-1:-1;;;;;;7234:22:5;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;7257:16:5;;7234:40;;;;;;;;;:50;:65;;;:50;;:65;7214:85;7210:334;;;-1:-1:-1;;;;;7315:22:5;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;7338:16:5;;7315:40;;;;;;;;7353:1;7315:46;:57;;;7210:334;;;7442:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7403:22:5;;-1:-1:-1;7403:22:5;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;7403:72:5;;;;;;;;;;;;;7489:25;;;:14;:25;;;;;;:44;;7517:16;;;7489:44;;;;;;;;;;7210:334;7559:51;;;;;;;;;;;;;;-1:-1:-1;;;;;7559:51:5;;;;;;;;;;;6926:691;;;;;:::o;7623:160::-;7698:6;7737:12;7728:7;7724:11;;7716:34;;;;-1:-1:-1;;;7716:34:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;7716:34:5;-1:-1:-1;7774:1:5;;7623:160;-1:-1:-1;;7623:160:5:o;179:949:3:-;;;;;;;;;;-1:-1:-1;179:949:3;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./DelegateBEP20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title BSTToken with Governance.\ncontract BSTToken is DelegateBEP20, Ownable {\n    address public minter;\n\n    uint256 public TOKENS_PER_INVESTOR = 1_000_000 ether;\n\n    constructor(\n        address owner_,\n        address minter_,\n        address[] memory investors\n    ) public BEP20(\"BStable Token\", \"BST\") {\n        require(investors.length == 10, \"only have 10 investor address\");\n        require(owner_ != minter_, \"BSTToken: owner can't be minter.\");\n        require(minter_ != address(0), \"BSTToken: minter_ can't be 0 address\");\n        transferOwnership(owner_);\n        minter = minter_;\n        for (uint256 i = 0; i < 10; i++) {\n            _mint(investors[i], TOKENS_PER_INVESTOR);\n        }\n    }\n\n    /// @notice Creates `_amount` token to `_to`.\n    function mint(address _to, uint256 _amount) public {\n        require(msg.sender == minter, \"BSTToken:only minter.\");\n        require(_to != address(0), \"BSTToken: no 0 address\");\n        _mint(_to, _amount);\n    }\n}\n",
  "sourcePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BSTToken.sol",
  "ast": {
    "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BSTToken.sol",
    "exportedSymbols": {
      "BSTToken": [
        1364
      ]
    },
    "id": 1365,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1252,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/DelegateBEP20.sol",
        "file": "./DelegateBEP20.sol",
        "id": 1253,
        "nodeType": "ImportDirective",
        "scope": 1365,
        "sourceUnit": 5308,
        "src": "58:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1254,
        "nodeType": "ImportDirective",
        "scope": 1365,
        "sourceUnit": 7821,
        "src": "88:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1256,
              "name": "DelegateBEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5307,
              "src": "200:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelegateBEP20_$5307",
                "typeString": "contract DelegateBEP20"
              }
            },
            "id": 1257,
            "nodeType": "InheritanceSpecifier",
            "src": "200:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1258,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7820,
              "src": "215:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7820",
                "typeString": "contract Ownable"
              }
            },
            "id": 1259,
            "nodeType": "InheritanceSpecifier",
            "src": "215:7:3"
          }
        ],
        "contractDependencies": [
          509,
          562,
          5307,
          7085,
          7820,
          8494
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1255,
          "nodeType": "StructuredDocumentation",
          "src": "142:37:3",
          "text": "@title BSTToken with Governance."
        },
        "fullyImplemented": true,
        "id": 1364,
        "linearizedBaseContracts": [
          1364,
          7820,
          5307,
          562,
          509,
          7085,
          8494
        ],
        "name": "BSTToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "07546172",
            "id": 1261,
            "mutability": "mutable",
            "name": "minter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1364,
            "src": "229:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1260,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "229:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d6b9a597",
            "id": 1264,
            "mutability": "mutable",
            "name": "TOKENS_PER_INVESTOR",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1364,
            "src": "257:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1262,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "315f3030305f303030",
              "id": 1263,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "294:15:3",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000"
              },
              "value": "1_000_000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "456:401:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1279,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1271,
                            "src": "474:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "474:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "494:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "474:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206861766520313020696e766573746f722061646472657373",
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "498:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ac30c2031630dba92738ee57b1090fa5f1a7bb79289c340c95ee3495a1f36e8",
                          "typeString": "literal_string \"only have 10 investor address\""
                        },
                        "value": "only have 10 investor address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ac30c2031630dba92738ee57b1090fa5f1a7bb79289c340c95ee3495a1f36e8",
                          "typeString": "literal_string \"only have 10 investor address\""
                        }
                      ],
                      "id": 1278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "466:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "466:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "466:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1287,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "548:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1288,
                          "name": "minter_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1268,
                          "src": "558:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "548:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "425354546f6b656e3a206f776e65722063616e2774206265206d696e7465722e",
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "567:34:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76298bd826df6a1f72b455dca6f8d39414436e87334aff097ee7396953f41519",
                          "typeString": "literal_string \"BSTToken: owner can't be minter.\""
                        },
                        "value": "BSTToken: owner can't be minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76298bd826df6a1f72b455dca6f8d39414436e87334aff097ee7396953f41519",
                          "typeString": "literal_string \"BSTToken: owner can't be minter.\""
                        }
                      ],
                      "id": 1286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "540:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "540:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "540:62:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1294,
                          "name": "minter_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1268,
                          "src": "620:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "639:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "631:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1295,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "631:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "631:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "620:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "425354546f6b656e3a206d696e7465725f2063616e277420626520302061646472657373",
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "643:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38849e49a79012d31438bce5d315cd6a9f658750a663862e057f95f41a6499a8",
                          "typeString": "literal_string \"BSTToken: minter_ can't be 0 address\""
                        },
                        "value": "BSTToken: minter_ can't be 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38849e49a79012d31438bce5d315cd6a9f658750a663862e057f95f41a6499a8",
                          "typeString": "literal_string \"BSTToken: minter_ can't be 0 address\""
                        }
                      ],
                      "id": 1293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "612:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1302,
                  "nodeType": "ExpressionStatement",
                  "src": "612:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1304,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "710:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1303,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7819,
                      "src": "692:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1306,
                  "nodeType": "ExpressionStatement",
                  "src": "692:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1307,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "727:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1308,
                      "name": "minter_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1268,
                      "src": "736:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "727:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "727:16:3"
                },
                {
                  "body": {
                    "id": 1328,
                    "nodeType": "Block",
                    "src": "786:65:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1322,
                                "name": "investors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1271,
                                "src": "806:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1324,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1323,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1312,
                                "src": "816:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "806:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1325,
                              "name": "TOKENS_PER_INVESTOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "820:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1321,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4728
                            ],
                            "referencedDeclaration": 4728,
                            "src": "800:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "800:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1327,
                        "nodeType": "ExpressionStatement",
                        "src": "800:40:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1315,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "773:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "777:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "773:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1329,
                  "initializationExpression": {
                    "assignments": [
                      1312
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1312,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1329,
                        "src": "758:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "758:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1314,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "770:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "758:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "781:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1318,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "781:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1320,
                    "nodeType": "ExpressionStatement",
                    "src": "781:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "753:98:3"
                }
              ]
            },
            "documentation": null,
            "id": 1331,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "42537461626c6520546f6b656e",
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "432:15:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a6e75b25a459996892fea924c3f2cd0b80e81c9ddca6cba72b4a6fb2ec0971f2",
                      "typeString": "literal_string \"BStable Token\""
                    },
                    "value": "BStable Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "425354",
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "449:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0595cc5d1d1f0e35668bdf44999d181a5aa58a18be9b835aff0c59dcee987966",
                      "typeString": "literal_string \"BST\""
                    },
                    "value": "BST"
                  }
                ],
                "id": 1276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1273,
                  "name": "BEP20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 509,
                  "src": "426:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BEP20_$509_$",
                    "typeString": "type(contract BEP20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "426:29:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1331,
                  "src": "337:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "337:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1268,
                  "mutability": "mutable",
                  "name": "minter_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1331,
                  "src": "361:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "investors",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1331,
                  "src": "386:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1269,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "386:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1270,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "386:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:91:3"
            },
            "returnParameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "456:0:3"
            },
            "scope": 1364,
            "src": "316:541:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "964:162:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1340,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "982:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "982:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1342,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1261,
                          "src": "996:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "982:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "425354546f6b656e3a6f6e6c79206d696e7465722e",
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1004:23:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b264d111529b16bad2979d0873c10abd5a959ffaefd36457c9cf802d534373d9",
                          "typeString": "literal_string \"BSTToken:only minter.\""
                        },
                        "value": "BSTToken:only minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b264d111529b16bad2979d0873c10abd5a959ffaefd36457c9cf802d534373d9",
                          "typeString": "literal_string \"BSTToken:only minter.\""
                        }
                      ],
                      "id": 1339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "974:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "974:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1348,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1334,
                          "src": "1046:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1061:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1053:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1349,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1053:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1053:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1046:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "425354546f6b656e3a206e6f20302061646472657373",
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1065:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96633905c0e56db98e597828389acec302e559f055a817174424f473cb961d33",
                          "typeString": "literal_string \"BSTToken: no 0 address\""
                        },
                        "value": "BSTToken: no 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96633905c0e56db98e597828389acec302e559f055a817174424f473cb961d33",
                          "typeString": "literal_string \"BSTToken: no 0 address\""
                        }
                      ],
                      "id": 1347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1038:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1358,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "1106:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1359,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "1111:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1357,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728
                      ],
                      "referencedDeclaration": 4728,
                      "src": "1100:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1100:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:19:3"
                }
              ]
            },
            "documentation": {
              "id": 1332,
              "nodeType": "StructuredDocumentation",
              "src": "863:45:3",
              "text": "@notice Creates `_amount` token to `_to`."
            },
            "functionSelector": "40c10f19",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1363,
                  "src": "927:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1363,
                  "src": "940:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:30:3"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:3"
            },
            "scope": 1364,
            "src": "913:213:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1365,
        "src": "179:949:3"
      }
    ],
    "src": "33:1096:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/BSTToken.sol",
      "exportedSymbols": {
        "BSTToken": [
          1364
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 1252,
        "name": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 5308,
          "absolutePath": "/Users/zhangleping/github.com/0xa8c81519/contracts-210510/contracts/DelegateBEP20.sol",
          "file": "./DelegateBEP20.sol",
          "scope": 1365,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1253,
        "name": "ImportDirective",
        "src": "58:29:3"
      },
      {
        "attributes": {
          "SourceUnit": 7821,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 1365,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1254,
        "name": "ImportDirective",
        "src": "88:52:3"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            509,
            562,
            5307,
            7085,
            7820,
            8494
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1364,
            7820,
            5307,
            562,
            509,
            7085,
            8494
          ],
          "name": "BSTToken",
          "scope": 1365
        },
        "children": [
          {
            "attributes": {
              "text": "@title BSTToken with Governance."
            },
            "id": 1255,
            "name": "StructuredDocumentation",
            "src": "142:37:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DelegateBEP20",
                  "referencedDeclaration": 5307,
                  "type": "contract DelegateBEP20"
                },
                "id": 1256,
                "name": "UserDefinedTypeName",
                "src": "200:13:3"
              }
            ],
            "id": 1257,
            "name": "InheritanceSpecifier",
            "src": "200:13:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 7820,
                  "type": "contract Ownable"
                },
                "id": 1258,
                "name": "UserDefinedTypeName",
                "src": "215:7:3"
              }
            ],
            "id": 1259,
            "name": "InheritanceSpecifier",
            "src": "215:7:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "07546172",
              "mutability": "mutable",
              "name": "minter",
              "overrides": null,
              "scope": 1364,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1260,
                "name": "ElementaryTypeName",
                "src": "229:7:3"
              }
            ],
            "id": 1261,
            "name": "VariableDeclaration",
            "src": "229:21:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d6b9a597",
              "mutability": "mutable",
              "name": "TOKENS_PER_INVESTOR",
              "overrides": null,
              "scope": 1364,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1262,
                "name": "ElementaryTypeName",
                "src": "257:7:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "315f3030305f303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": "ether",
                  "token": "number",
                  "type": "int_const 1000000000000000000000000",
                  "value": "1_000_000"
                },
                "id": 1263,
                "name": "Literal",
                "src": "294:15:3"
              }
            ],
            "id": 1264,
            "name": "VariableDeclaration",
            "src": "257:52:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 1364,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner_",
                      "overrides": null,
                      "scope": 1331,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1265,
                        "name": "ElementaryTypeName",
                        "src": "337:7:3"
                      }
                    ],
                    "id": 1266,
                    "name": "VariableDeclaration",
                    "src": "337:14:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "minter_",
                      "overrides": null,
                      "scope": 1331,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1267,
                        "name": "ElementaryTypeName",
                        "src": "361:7:3"
                      }
                    ],
                    "id": 1268,
                    "name": "VariableDeclaration",
                    "src": "361:15:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "investors",
                      "overrides": null,
                      "scope": 1331,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1269,
                            "name": "ElementaryTypeName",
                            "src": "386:7:3"
                          }
                        ],
                        "id": 1270,
                        "name": "ArrayTypeName",
                        "src": "386:9:3"
                      }
                    ],
                    "id": 1271,
                    "name": "VariableDeclaration",
                    "src": "386:26:3"
                  }
                ],
                "id": 1272,
                "name": "ParameterList",
                "src": "327:91:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1277,
                "name": "ParameterList",
                "src": "456:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 509,
                      "type": "type(contract BEP20)",
                      "value": "BEP20"
                    },
                    "id": 1273,
                    "name": "Identifier",
                    "src": "426:5:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "42537461626c6520546f6b656e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"BStable Token\"",
                      "value": "BStable Token"
                    },
                    "id": 1274,
                    "name": "Literal",
                    "src": "432:15:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "425354",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"BST\"",
                      "value": "BST"
                    },
                    "id": 1275,
                    "name": "Literal",
                    "src": "449:5:3"
                  }
                ],
                "id": 1276,
                "name": "ModifierInvocation",
                "src": "426:29:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0ac30c2031630dba92738ee57b1090fa5f1a7bb79289c340c95ee3495a1f36e8",
                                  "typeString": "literal_string \"only have 10 investor address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1278,
                            "name": "Identifier",
                            "src": "466:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1271,
                                      "type": "address[] memory",
                                      "value": "investors"
                                    },
                                    "id": 1279,
                                    "name": "Identifier",
                                    "src": "474:9:3"
                                  }
                                ],
                                "id": 1280,
                                "name": "MemberAccess",
                                "src": "474:16:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 1281,
                                "name": "Literal",
                                "src": "494:2:3"
                              }
                            ],
                            "id": 1282,
                            "name": "BinaryOperation",
                            "src": "474:22:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6f6e6c79206861766520313020696e766573746f722061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"only have 10 investor address\"",
                              "value": "only have 10 investor address"
                            },
                            "id": 1283,
                            "name": "Literal",
                            "src": "498:31:3"
                          }
                        ],
                        "id": 1284,
                        "name": "FunctionCall",
                        "src": "466:64:3"
                      }
                    ],
                    "id": 1285,
                    "name": "ExpressionStatement",
                    "src": "466:64:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_76298bd826df6a1f72b455dca6f8d39414436e87334aff097ee7396953f41519",
                                  "typeString": "literal_string \"BSTToken: owner can't be minter.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1286,
                            "name": "Identifier",
                            "src": "540:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1266,
                                  "type": "address",
                                  "value": "owner_"
                                },
                                "id": 1287,
                                "name": "Identifier",
                                "src": "548:6:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1268,
                                  "type": "address",
                                  "value": "minter_"
                                },
                                "id": 1288,
                                "name": "Identifier",
                                "src": "558:7:3"
                              }
                            ],
                            "id": 1289,
                            "name": "BinaryOperation",
                            "src": "548:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "425354546f6b656e3a206f776e65722063616e2774206265206d696e7465722e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"BSTToken: owner can't be minter.\"",
                              "value": "BSTToken: owner can't be minter."
                            },
                            "id": 1290,
                            "name": "Literal",
                            "src": "567:34:3"
                          }
                        ],
                        "id": 1291,
                        "name": "FunctionCall",
                        "src": "540:62:3"
                      }
                    ],
                    "id": 1292,
                    "name": "ExpressionStatement",
                    "src": "540:62:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_38849e49a79012d31438bce5d315cd6a9f658750a663862e057f95f41a6499a8",
                                  "typeString": "literal_string \"BSTToken: minter_ can't be 0 address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1293,
                            "name": "Identifier",
                            "src": "612:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1268,
                                  "type": "address",
                                  "value": "minter_"
                                },
                                "id": 1294,
                                "name": "Identifier",
                                "src": "620:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address",
                                          "type": null
                                        },
                                        "id": 1295,
                                        "name": "ElementaryTypeName",
                                        "src": "631:7:3"
                                      }
                                    ],
                                    "id": 1296,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "631:7:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1297,
                                    "name": "Literal",
                                    "src": "639:1:3"
                                  }
                                ],
                                "id": 1298,
                                "name": "FunctionCall",
                                "src": "631:10:3"
                              }
                            ],
                            "id": 1299,
                            "name": "BinaryOperation",
                            "src": "620:21:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "425354546f6b656e3a206d696e7465725f2063616e277420626520302061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"BSTToken: minter_ can't be 0 address\"",
                              "value": "BSTToken: minter_ can't be 0 address"
                            },
                            "id": 1300,
                            "name": "Literal",
                            "src": "643:38:3"
                          }
                        ],
                        "id": 1301,
                        "name": "FunctionCall",
                        "src": "612:70:3"
                      }
                    ],
                    "id": 1302,
                    "name": "ExpressionStatement",
                    "src": "612:70:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7819,
                              "type": "function (address)",
                              "value": "transferOwnership"
                            },
                            "id": 1303,
                            "name": "Identifier",
                            "src": "692:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1266,
                              "type": "address",
                              "value": "owner_"
                            },
                            "id": 1304,
                            "name": "Identifier",
                            "src": "710:6:3"
                          }
                        ],
                        "id": 1305,
                        "name": "FunctionCall",
                        "src": "692:25:3"
                      }
                    ],
                    "id": 1306,
                    "name": "ExpressionStatement",
                    "src": "692:25:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1261,
                              "type": "address",
                              "value": "minter"
                            },
                            "id": 1307,
                            "name": "Identifier",
                            "src": "727:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1268,
                              "type": "address",
                              "value": "minter_"
                            },
                            "id": 1308,
                            "name": "Identifier",
                            "src": "736:7:3"
                          }
                        ],
                        "id": 1309,
                        "name": "Assignment",
                        "src": "727:16:3"
                      }
                    ],
                    "id": 1310,
                    "name": "ExpressionStatement",
                    "src": "727:16:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            1312
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "overrides": null,
                              "scope": 1329,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1311,
                                "name": "ElementaryTypeName",
                                "src": "758:7:3"
                              }
                            ],
                            "id": 1312,
                            "name": "VariableDeclaration",
                            "src": "758:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1313,
                            "name": "Literal",
                            "src": "770:1:3"
                          }
                        ],
                        "id": 1314,
                        "name": "VariableDeclarationStatement",
                        "src": "758:13:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1312,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 1315,
                            "name": "Identifier",
                            "src": "773:1:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 1316,
                            "name": "Literal",
                            "src": "777:2:3"
                          }
                        ],
                        "id": 1317,
                        "name": "BinaryOperation",
                        "src": "773:6:3"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1312,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 1318,
                                "name": "Identifier",
                                "src": "781:1:3"
                              }
                            ],
                            "id": 1319,
                            "name": "UnaryOperation",
                            "src": "781:3:3"
                          }
                        ],
                        "id": 1320,
                        "name": "ExpressionStatement",
                        "src": "781:3:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        4728
                                      ],
                                      "referencedDeclaration": 4728,
                                      "type": "function (address,uint256)",
                                      "value": "_mint"
                                    },
                                    "id": 1321,
                                    "name": "Identifier",
                                    "src": "800:5:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1271,
                                          "type": "address[] memory",
                                          "value": "investors"
                                        },
                                        "id": 1322,
                                        "name": "Identifier",
                                        "src": "806:9:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1312,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 1323,
                                        "name": "Identifier",
                                        "src": "816:1:3"
                                      }
                                    ],
                                    "id": 1324,
                                    "name": "IndexAccess",
                                    "src": "806:12:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1264,
                                      "type": "uint256",
                                      "value": "TOKENS_PER_INVESTOR"
                                    },
                                    "id": 1325,
                                    "name": "Identifier",
                                    "src": "820:19:3"
                                  }
                                ],
                                "id": 1326,
                                "name": "FunctionCall",
                                "src": "800:40:3"
                              }
                            ],
                            "id": 1327,
                            "name": "ExpressionStatement",
                            "src": "800:40:3"
                          }
                        ],
                        "id": 1328,
                        "name": "Block",
                        "src": "786:65:3"
                      }
                    ],
                    "id": 1329,
                    "name": "ForStatement",
                    "src": "753:98:3"
                  }
                ],
                "id": 1330,
                "name": "Block",
                "src": "456:401:3"
              }
            ],
            "id": 1331,
            "name": "FunctionDefinition",
            "src": "316:541:3"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "overrides": null,
              "scope": 1364,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Creates `_amount` token to `_to`."
                },
                "id": 1332,
                "name": "StructuredDocumentation",
                "src": "863:45:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_to",
                      "overrides": null,
                      "scope": 1363,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1333,
                        "name": "ElementaryTypeName",
                        "src": "927:7:3"
                      }
                    ],
                    "id": 1334,
                    "name": "VariableDeclaration",
                    "src": "927:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "overrides": null,
                      "scope": 1363,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1335,
                        "name": "ElementaryTypeName",
                        "src": "940:7:3"
                      }
                    ],
                    "id": 1336,
                    "name": "VariableDeclaration",
                    "src": "940:15:3"
                  }
                ],
                "id": 1337,
                "name": "ParameterList",
                "src": "926:30:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1338,
                "name": "ParameterList",
                "src": "964:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b264d111529b16bad2979d0873c10abd5a959ffaefd36457c9cf802d534373d9",
                                  "typeString": "literal_string \"BSTToken:only minter.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1339,
                            "name": "Identifier",
                            "src": "974:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1340,
                                    "name": "Identifier",
                                    "src": "982:3:3"
                                  }
                                ],
                                "id": 1341,
                                "name": "MemberAccess",
                                "src": "982:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1261,
                                  "type": "address",
                                  "value": "minter"
                                },
                                "id": 1342,
                                "name": "Identifier",
                                "src": "996:6:3"
                              }
                            ],
                            "id": 1343,
                            "name": "BinaryOperation",
                            "src": "982:20:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "425354546f6b656e3a6f6e6c79206d696e7465722e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"BSTToken:only minter.\"",
                              "value": "BSTToken:only minter."
                            },
                            "id": 1344,
                            "name": "Literal",
                            "src": "1004:23:3"
                          }
                        ],
                        "id": 1345,
                        "name": "FunctionCall",
                        "src": "974:54:3"
                      }
                    ],
                    "id": 1346,
                    "name": "ExpressionStatement",
                    "src": "974:54:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_96633905c0e56db98e597828389acec302e559f055a817174424f473cb961d33",
                                  "typeString": "literal_string \"BSTToken: no 0 address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1347,
                            "name": "Identifier",
                            "src": "1038:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1334,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 1348,
                                "name": "Identifier",
                                "src": "1046:3:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address",
                                          "type": null
                                        },
                                        "id": 1349,
                                        "name": "ElementaryTypeName",
                                        "src": "1053:7:3"
                                      }
                                    ],
                                    "id": 1350,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1053:7:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1351,
                                    "name": "Literal",
                                    "src": "1061:1:3"
                                  }
                                ],
                                "id": 1352,
                                "name": "FunctionCall",
                                "src": "1053:10:3"
                              }
                            ],
                            "id": 1353,
                            "name": "BinaryOperation",
                            "src": "1046:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "425354546f6b656e3a206e6f20302061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"BSTToken: no 0 address\"",
                              "value": "BSTToken: no 0 address"
                            },
                            "id": 1354,
                            "name": "Literal",
                            "src": "1065:24:3"
                          }
                        ],
                        "id": 1355,
                        "name": "FunctionCall",
                        "src": "1038:52:3"
                      }
                    ],
                    "id": 1356,
                    "name": "ExpressionStatement",
                    "src": "1038:52:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                4728
                              ],
                              "referencedDeclaration": 4728,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1357,
                            "name": "Identifier",
                            "src": "1100:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1334,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 1358,
                            "name": "Identifier",
                            "src": "1106:3:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1336,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 1359,
                            "name": "Identifier",
                            "src": "1111:7:3"
                          }
                        ],
                        "id": 1360,
                        "name": "FunctionCall",
                        "src": "1100:19:3"
                      }
                    ],
                    "id": 1361,
                    "name": "ExpressionStatement",
                    "src": "1100:19:3"
                  }
                ],
                "id": 1362,
                "name": "Block",
                "src": "964:162:3"
              }
            ],
            "id": 1363,
            "name": "FunctionDefinition",
            "src": "913:213:3"
          }
        ],
        "id": 1364,
        "name": "ContractDefinition",
        "src": "179:949:3"
      }
    ],
    "id": 1365,
    "name": "SourceUnit",
    "src": "33:1096:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "56": {
      "events": {},
      "links": {},
      "address": "0x0A65141EDE51776712B91cE1B77B996aE6f089eC",
      "transactionHash": "0x133340885870ce68f61d7de9dc4fce38024a898467ca59beabe6ea241ca22dde"
    },
    "97": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "delegator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "toDelegate",
              "type": "address"
            }
          ],
          "name": "DelegateChanged",
          "type": "event"
        },
        "0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256"
            }
          ],
          "name": "DelegateVotesChanged",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x43bdBAF8916cd869240fd7961ECb320F61938212",
      "transactionHash": "0x182a3b8aeed88df11eb0363530b12e5f3253aeca532d74cd92fe876815e2e278"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "delegator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "toDelegate",
              "type": "address"
            }
          ],
          "name": "DelegateChanged",
          "type": "event"
        },
        "0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256"
            }
          ],
          "name": "DelegateVotesChanged",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x76004299a72c5F580A1B09fC0B7161981F1e6918",
      "transactionHash": "0x35fa2d56b3a87684a9fa5b6319292ef561a379c7b3cbec2d4dc36c55be8bdce3"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-12T09:01:57.181Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IBEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IBEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IBEP20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {BEP20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {BEP20-_burn} and {BEP20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IBEP20-balanceOf} and {IBEP20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "delegate(address)": {
        "params": {
          "delegatee": "The address to delegate votes to"
        }
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "delegatee": "The address to delegate votes to",
          "expiry": "The time at which to expire the signature",
          "nonce": "The contract state required to match the signature",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "v": "The recovery byte of the signature"
        }
      },
      "getCurrentVotes(address)": {
        "params": {
          "account": "The address to get votes balance"
        },
        "returns": {
          "_0": "The number of current votes for `account`"
        }
      },
      "getPriorVotes(address,uint256)": {
        "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
        "params": {
          "account": "The address of the account to check",
          "blockNumber": "The block number to get the vote balance at"
        },
        "returns": {
          "_0": "The number of votes the account had as of the given block"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IBEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IBEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IBEP20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "BSTToken with Governance."
  },
  "userdoc": {
    "methods": {
      "delegate(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`"
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates votes from signatory to `delegatee`"
      },
      "getCurrentVotes(address)": {
        "notice": "Gets the current votes balance for `account`"
      },
      "getPriorVotes(address,uint256)": {
        "notice": "Determine the prior number of votes for an account as of a block number"
      },
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`."
      }
    }
  }
}